<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/app/build.gradle.kts">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/build.gradle.kts" />
              <option name="originalContent" value="plugins {&#10;    alias(libs.plugins.android.application)&#10;    alias(libs.plugins.kotlin.android)&#10;}&#10;&#10;android {&#10;    namespace = &quot;com.example.knowmyspot&quot;&#10;    compileSdk = 33&#10;&#10;    defaultConfig {&#10;        applicationId = &quot;com.example.knowmyspot&quot;&#10;        minSdk = 26&#10;        targetSdk = 33&#10;        versionCode = 1&#10;        versionName = &quot;1.0&quot;&#10;&#10;        testInstrumentationRunner = &quot;androidx.test.runner.AndroidJUnitRunner&quot;&#10;    }&#10;&#10;    buildTypes {&#10;        release {&#10;            isMinifyEnabled = false&#10;            proguardFiles(getDefaultProguardFile(&quot;proguard-android-optimize.txt&quot;), &quot;proguard-rules.pro&quot;)&#10;        }&#10;    }&#10;    compileOptions {&#10;        sourceCompatibility = JavaVersion.VERSION_11&#10;        targetCompatibility = JavaVersion.VERSION_11&#10;    }&#10;    kotlinOptions {&#10;        jvmTarget = &quot;11&quot;&#10;    }&#10;}&#10;&#10;dependencies {&#10;    // Core Android &amp; Jetpack&#10;    implementation(libs.androidx.core.ktx)&#10;    implementation(libs.androidx.appcompat)&#10;    implementation(libs.androidx.constraintlayout)&#10;    implementation(libs.androidx.lifecycle.runtime.ktx)&#10;    implementation(libs.androidx.activity.ktx)&#10;    implementation(libs.androidx.lifecycle.viewmodel.ktx)&#10;&#10;&#10;    // Material Design&#10;    implementation(libs.material)&#10;    implementation(libs.cardview)&#10;    implementation(libs.recyclerview)&#10;&#10;    // Google Play Services&#10;    implementation(libs.play.services.location)&#10;&#10;    // Retrofit for Networking&#10;    implementation(libs.retrofit)&#10;    implementation(libs.retrofit.converter.gson)&#10;&#10;    // Testing&#10;    testImplementation(libs.junit)&#10;    androidTestImplementation(libs.androidx.junit)&#10;    androidTestImplementation(libs.androidx.espresso.core)&#10;}" />
              <option name="updatedContent" value="plugins {&#10;    alias(libs.plugins.android.application)&#10;    alias(libs.plugins.kotlin.android)&#10;}&#10;&#10;android {&#10;    namespace = &quot;com.example.knowmyspot&quot;&#10;    compileSdk = 34&#10;&#10;    defaultConfig {&#10;        applicationId = &quot;com.example.knowmyspot&quot;&#10;        minSdk = 26&#10;        targetSdk = 34&#10;        versionCode = 1&#10;        versionName = &quot;1.0&quot;&#10;&#10;        testInstrumentationRunner = &quot;androidx.test.runner.AndroidJUnitRunner&quot;&#10;    }&#10;&#10;    buildTypes {&#10;        release {&#10;            isMinifyEnabled = false&#10;            proguardFiles(getDefaultProguardFile(&quot;proguard-android-optimize.txt&quot;), &quot;proguard-rules.pro&quot;)&#10;        }&#10;    }&#10;    compileOptions {&#10;        sourceCompatibility = JavaVersion.VERSION_11&#10;        targetCompatibility = JavaVersion.VERSION_11&#10;    }&#10;    kotlinOptions {&#10;        jvmTarget = &quot;11&quot;&#10;    }&#10;}&#10;&#10;dependencies {&#10;    // Core Android &amp; Jetpack&#10;    implementation(libs.androidx.core.ktx)&#10;    implementation(libs.androidx.appcompat)&#10;    implementation(libs.androidx.constraintlayout)&#10;    implementation(libs.androidx.lifecycle.runtime.ktx)&#10;    implementation(libs.androidx.activity.ktx)&#10;    implementation(libs.androidx.lifecycle.viewmodel.ktx)&#10;&#10;&#10;    // Material Design&#10;    implementation(libs.material)&#10;    implementation(libs.cardview)&#10;    implementation(libs.recyclerview)&#10;&#10;    // Google Play Services&#10;    implementation(libs.play.services.location)&#10;&#10;    // Retrofit for Networking&#10;    implementation(libs.retrofit)&#10;    implementation(libs.retrofit.converter.gson)&#10;&#10;    // Testing&#10;    testImplementation(libs.junit)&#10;    androidTestImplementation(libs.androidx.junit)&#10;    androidTestImplementation(libs.androidx.espresso.core)&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/AndroidManifest.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/AndroidManifest.xml" />
              <option name="originalContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;manifest xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;          xmlns:tools=&quot;http://schemas.android.com/tools&quot;&gt;&#10;&#10;    &lt;uses-permission android:name=&quot;android.permission.ACCESS_FINE_LOCATION&quot;/&gt;&#10;    &lt;uses-permission android:name=&quot;android.permission.ACCESS_COARSE_LOCATION&quot;/&gt;&#10;    &lt;uses-permission android:name=&quot;android.permission.INTERNET&quot;/&gt;&#10;&#10;    &lt;application&#10;            android:name=&quot;.LocationApplication&quot;&#10;            android:allowBackup=&quot;true&quot;&#10;            android:dataExtractionRules=&quot;@xml/data_extraction_rules&quot;&#10;            android:fullBackupContent=&quot;@xml/backup_rules&quot;&#10;            android:icon=&quot;@mipmap/ic_launcher&quot;&#10;            android:label=&quot;@string/app_name&quot;&#10;            android:roundIcon=&quot;@mipmap/ic_launcher_round&quot;&#10;            android:supportsRtl=&quot;true&quot;&#10;            android:theme=&quot;@style/Theme.KnowMySpot&quot;&#10;            tools:targetApi=&quot;31&quot;&gt;&#10;        &lt;activity&#10;                android:name=&quot;.MainActivity&quot;&#10;                android:exported=&quot;true&quot;&#10;                android:label=&quot;@string/app_name&quot;&#10;                android:theme=&quot;@style/Theme.KnowMySpot&quot;&gt;&#10;            &lt;intent-filter&gt;&#10;                &lt;action android:name=&quot;android.intent.action.MAIN&quot;/&gt;&#10;&#10;                &lt;category android:name=&quot;android.intent.category.LAUNCHER&quot;/&gt;&#10;            &lt;/intent-filter&gt;&#10;        &lt;/activity&gt;&#10;        &lt;activity android:name=&quot;.HistoryActivity&quot; /&gt;&#10;        &lt;activity android:name=&quot;.SettingsActivity&quot; /&gt;&#10;    &lt;/application&gt;&#10;&#10;&lt;/manifest&gt;" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;manifest xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;          xmlns:tools=&quot;http://schemas.android.com/tools&quot;&gt;&#10;&#10;    &lt;uses-permission android:name=&quot;android.permission.ACCESS_FINE_LOCATION&quot;/&gt;&#10;    &lt;uses-permission android:name=&quot;android.permission.ACCESS_COARSE_LOCATION&quot;/&gt;&#10;    &lt;uses-permission android:name=&quot;android.permission.INTERNET&quot;/&gt;&#10;&#10;    &lt;application&#10;            android:name=&quot;.LocationApplication&quot;&#10;            android:allowBackup=&quot;true&quot;&#10;            android:dataExtractionRules=&quot;@xml/data_extraction_rules&quot;&#10;            android:fullBackupContent=&quot;@xml/backup_rules&quot;&#10;            android:icon=&quot;@mipmap/ic_launcher&quot;&#10;            android:label=&quot;@string/app_name&quot;&#10;            android:roundIcon=&quot;@mipmap/ic_launcher_round&quot;&#10;            android:supportsRtl=&quot;true&quot;&#10;            android:theme=&quot;@style/Theme.KnowMySpot&quot;&#10;            tools:targetApi=&quot;31&quot;&gt;&#10;        &lt;activity&#10;                android:name=&quot;.MainActivity&quot;&#10;                android:exported=&quot;true&quot;&#10;                android:label=&quot;@string/app_name&quot;&gt;&#10;            &lt;intent-filter&gt;&#10;                &lt;action android:name=&quot;android.intent.action.MAIN&quot;/&gt;&#10;&#10;                &lt;category android:name=&quot;android.intent.category.LAUNCHER&quot;/&gt;&#10;            &lt;/intent-filter&gt;&#10;        &lt;/activity&gt;&#10;        &lt;activity android:name=&quot;.HistoryActivity&quot; /&gt;&#10;        &lt;activity android:name=&quot;.SettingsActivity&quot; /&gt;&#10;    &lt;/application&gt;&#10;&#10;&lt;/manifest&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/knowmyspot/HistoryActivity.kt">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/knowmyspot/HistoryActivity.kt" />
              <option name="originalContent" value="package com.example.knowmyspot&#10;&#10;import android.os.Bundle&#10;import android.widget.*&#10;    override fun onCreate(savedInstanceState: Bundle?) {&#10;        super.onCreate(savedInstanceState)&#10;        setContentView(R.layout.activity_history)&#10;        val listView = findViewById&lt;ListView&gt;(R.id.listHistory)&#10;        val emptyView = findViewById&lt;TextView&gt;(R.id.tvHistoryEmpty)&#10;&#10;        val adapter = object : ArrayAdapter&lt;HistoryItem&gt;(this, R.layout.item_history, R.id.tvHistoryItemInfo, HistoryStorage.items) {&#10;            override fun getView(position: Int, convertView: android.view.View?, parent: android.view.ViewGroup): android.view.View {&#10;                val inflater = layoutInflater&#10;                val view = convertView ?: inflater.inflate(R.layout.item_history, parent, false)&#10;                val item = getItem(position)&#10;                val info = view.findViewById&lt;TextView&gt;(R.id.tvHistoryItemInfo)&#10;                val etNote = view.findViewById&lt;EditText&gt;(R.id.etNote)&#10;&#10;        val adapter = object : ArrayAdapter&lt;HistoryItem&gt;(this, R.layout.item_history, R.id.tvHistoryItemInfo, HistoryStorage.items) {&#10;            override fun getView(position: Int, convertView: android.view.View?, parent: android.view.ViewGroup): android.view.View {&#10;                val inflater = layoutInflater&#10;                val view = convertView ?: inflater.inflate(R.layout.item_history, parent, false)&#10;                val item = getItem(position)&#10;                val info = view.findViewById&lt;TextView&gt;(R.id.tvHistoryItemInfo)&#10;                val etNote = view.findViewById&lt;EditText&gt;(R.id.etNote)&#10;                val btnSave = view.findViewById&lt;Button&gt;(R.id.btnSaveNote)&#10;                info.text = &quot;Lat: %.5f, Lon: %.5f\n%s\nPoznámka: %s&quot;.format(item?.latitude, item?.longitude, item?.weather, item?.note ?: &quot;--&quot;)&#10;                etNote.setText(item?.note ?: &quot;&quot;)&#10;                btnSave.setOnClickListener {&#10;                    item?.let {&#10;                        // Poznámka musí být var, ne val, proto upravíme HistoryItem&#10;                        val index = HistoryStorage.items.indexOf(it)&#10;                        if (index != -1) {&#10;                            HistoryStorage.items[index] = it.copy(note = etNote.text.toString())&#10;                            notifyDataSetChanged()&#10;                        }&#10;                    }&#10;                }&#10;                return view&#10;            }&#10;        }&#10;        listView.adapter = adapter&#10;                val btnSave = view.findViewById&lt;Button&gt;(R.id.btnSaveNote)&#10;                            HistoryStorage.items[index] = it.copy(note = etNote.text.toString())&#10;                            notifyDataSetChanged()&#10;                        }&#10;                    }&#10;                }&#10;                return view&#10;            }&#10;        }&#10;        listView.adapter = adapter&#10;        listView.emptyView = emptyView&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="package com.example.knowmyspot&#10;&#10;import android.os.Bundle&#10;import androidx.activity.viewModels&#10;import androidx.appcompat.app.AppCompatActivity&#10;import androidx.appcompat.widget.Toolbar&#10;import androidx.recyclerview.widget.LinearLayoutManager&#10;import androidx.recyclerview.widget.RecyclerView&#10;&#10;class HistoryActivity : AppCompatActivity() {&#10;&#10;    private val historyViewModel: HistoryViewModel by viewModels {&#10;        HistoryViewModelFactory((application as LocationApplication).repository)&#10;    }&#10;&#10;    override fun onCreate(savedInstanceState: Bundle?) {&#10;        super.onCreate(savedInstanceState)&#10;        setContentView(R.layout.activity_history)&#10;&#10;        val toolbar = findViewById&lt;Toolbar&gt;(R.id.toolbar)&#10;        setSupportActionBar(toolbar)&#10;        supportActionBar?.setDisplayHomeAsUpEnabled(true)&#10;        toolbar.setNavigationOnClickListener {&#10;            finish()&#10;        }&#10;&#10;        val recyclerView = findViewById&lt;RecyclerView&gt;(R.id.rvHistory)&#10;        val adapter = HistoryAdapter(this, historyViewModel)&#10;        recyclerView.adapter = adapter&#10;        recyclerView.layoutManager = LinearLayoutManager(this)&#10;&#10;        historyViewModel.allRecords.observe(this) { records -&gt;&#10;            records?.let {&#10;                adapter.submitList(it)&#10;            }&#10;        }&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/knowmyspot/HistoryAdapter.kt">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/knowmyspot/HistoryAdapter.kt" />
              <option name="originalContent" value="package com.example.knowmyspot&#10;&#10;import android.content.Context&#10;import android.view.LayoutInflater&#10;import android.view.View&#10;import android.view.ViewGroup&#10;import android.widget.*&#10;import com.example.knowmyspot.data.LocationRecord&#10;&#10;class HistoryAdapter(&#10;    context: Context,&#10;    private val records: List&lt;LocationRecord&gt;,&#10;    private val viewModel: HistoryViewModel&#10;) : ArrayAdapter&lt;LocationRecord&gt;(context, 0, records) {&#10;&#10;    override fun getView(position: Int, convertView: View?, parent: ViewGroup): View {&#10;        val view = convertView ?: LayoutInflater.from(context).inflate(R.layout.item_history, parent, false)&#10;        val record = getItem(position) ?: return view&#10;&#10;        val info = view.findViewById&lt;TextView&gt;(R.id.tvHistoryItemInfo)&#10;        val btnEdit = view.findViewById&lt;ImageButton&gt;(R.id.btnEditNote)&#10;        val btnDelete = view.findViewById&lt;ImageButton&gt;(R.id.btnDeleteRecord)&#10;        val etNote = view.findViewById&lt;EditText&gt;(R.id.etNote)&#10;        val btnSave = view.findViewById&lt;Button&gt;(R.id.btnSaveNote)&#10;&#10;        info.text = &quot;Adresa: %s\n%s\nLat: %.5f, Lon: %.5f\nPoznámka: %s&quot;.format(record.address, record.weather ?: &quot;Počasí: --&quot;, record.latitude, record.longitude, record.note ?: &quot;--&quot;)&#10;        etNote.visibility = View.GONE&#10;        btnSave.visibility = View.GONE&#10;&#10;        btnEdit.setOnClickListener {&#10;            etNote.setText(record.note ?: &quot;&quot;)&#10;            etNote.visibility = View.VISIBLE&#10;            btnSave.visibility = View.VISIBLE&#10;            etNote.requestFocus()&#10;        }&#10;&#10;        btnDelete.setOnClickListener {&#10;            viewModel.delete(record)&#10;        }&#10;&#10;        btnSave.setOnClickListener {&#10;            val updatedRecord = record.copy(note = etNote.text.toString())&#10;            viewModel.update(updatedRecord)&#10;            etNote.visibility = View.GONE&#10;            btnSave.visibility = View.GONE&#10;        }&#10;&#10;        return view&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="package com.example.knowmyspot&#10;&#10;import android.content.Context&#10;import android.view.LayoutInflater&#10;import android.view.View&#10;import android.view.ViewGroup&#10;import android.widget.*&#10;import androidx.recyclerview.widget.DiffUtil&#10;import androidx.recyclerview.widget.ListAdapter&#10;import androidx.recyclerview.widget.RecyclerView&#10;import com.example.knowmyspot.data.LocationRecord&#10;&#10;class HistoryAdapter(&#10;    private val context: Context,&#10;    private val viewModel: HistoryViewModel&#10;) : ListAdapter&lt;LocationRecord, HistoryAdapter.HistoryViewHolder&gt;(LocationRecordDiffCallback()) {&#10;&#10;    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): HistoryViewHolder {&#10;        val view = LayoutInflater.from(context).inflate(R.layout.item_history, parent, false)&#10;        return HistoryViewHolder(view)&#10;    }&#10;&#10;    override fun onBindViewHolder(holder: HistoryViewHolder, position: Int) {&#10;        val record = getItem(position)&#10;        holder.bind(record, viewModel)&#10;    }&#10;&#10;    class HistoryViewHolder(itemView: View) : RecyclerView.ViewHolder(itemView) {&#10;        private val address: TextView = itemView.findViewById(R.id.tvHistoryItemAddress)&#10;        private val weather: TextView = itemView.findViewById(R.id.tvHistoryItemWeather)&#10;        private val coordinates: TextView = itemView.findViewById(R.id.tvHistoryItemCoordinates)&#10;        private val note: TextView = itemView.findViewById(R.id.tvHistoryItemNote)&#10;        private val btnEdit: ImageButton = itemView.findViewById(R.id.btnEditNote)&#10;        private val btnDelete: ImageButton = itemView.findViewById(R.id.btnDeleteRecord)&#10;        private val etNote: EditText = itemView.findViewById(R.id.etNote)&#10;        private val btnSave: Button = itemView.findViewById(R.id.btnSaveNote)&#10;&#10;        fun bind(record: LocationRecord, viewModel: HistoryViewModel) {&#10;            address.text = record.address&#10;            weather.text = record.weather ?: &quot;Počasí: --&quot;&#10;            coordinates.text = &quot;Lat: %.5f, Lon: %.5f&quot;.format(record.latitude, record.longitude)&#10;            note.text = &quot;Poznámka: ${record.note ?: &quot;--&quot;}&quot;&#10;&#10;            etNote.visibility = View.GONE&#10;            btnSave.visibility = View.GONE&#10;&#10;            btnEdit.setOnClickListener {&#10;                if (etNote.visibility == View.GONE) {&#10;                    etNote.setText(record.note ?: &quot;&quot;)&#10;                    etNote.visibility = View.VISIBLE&#10;                    btnSave.visibility = View.VISIBLE&#10;                    etNote.requestFocus()&#10;                } else {&#10;                    etNote.visibility = View.GONE&#10;                    btnSave.visibility = View.GONE&#10;                }&#10;            }&#10;&#10;            btnDelete.setOnClickListener {&#10;                viewModel.delete(record)&#10;            }&#10;&#10;            btnSave.setOnClickListener {&#10;                val updatedRecord = record.copy(note = etNote.text.toString())&#10;                viewModel.update(updatedRecord)&#10;                etNote.visibility = View.GONE&#10;                btnSave.visibility = View.GONE&#10;            }&#10;        }&#10;    }&#10;}&#10;&#10;class LocationRecordDiffCallback : DiffUtil.ItemCallback&lt;LocationRecord&gt;() {&#10;    override fun areItemsTheSame(oldItem: LocationRecord, newItem: LocationRecord): Boolean {&#10;        return oldItem.id == newItem.id&#10;    }&#10;&#10;    override fun areContentsTheSame(oldItem: LocationRecord, newItem: LocationRecord): Boolean {&#10;        return oldItem == newItem&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/knowmyspot/HistoryStorage.kt">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/knowmyspot/HistoryStorage.kt" />
              <option name="updatedContent" value="package com.example.knowmyspot&#10;&#10;data class HistoryItem(&#10;    val latitude: Double,&#10;    val longitude: Double,&#10;    val weather: String,&#10;    val note: String? = null,&#10;    val timestamp: Long = System.currentTimeMillis()&#10;)&#10;&#10;object HistoryStorage {&#10;    val items = mutableListOf&lt;HistoryItem&gt;()&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/knowmyspot/HistoryViewModel.kt">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/knowmyspot/HistoryViewModel.kt" />
              <option name="originalContent" value="package com.example.knowmyspot&#10;&#10;import androidx.lifecycle.*&#10;import com.example.knowmyspot.data.LocationRecord&#10;import com.example.knowmyspot.data.LocationRepository&#10;import kotlinx.coroutines.launch&#10;&#10;class HistoryViewModel(private val repository: LocationRepository) : ViewModel() {&#10;&#10;    val allRecords: LiveData&lt;List&lt;LocationRecord&gt;&gt; = repository.allRecords.asLiveData()&#10;&#10;    fun update(locationRecord: LocationRecord) = viewModelScope.launch {&#10;        repository.update(locationRecord)&#10;    }&#10;}&#10;&#10;class HistoryViewModelFactory(private val repository: LocationRepository) : ViewModelProvider.Factory {&#10;    override fun &lt;T : ViewModel&gt; create(modelClass: Class&lt;T&gt;): T {&#10;        if (modelClass.isAssignableFrom(HistoryViewModel::class.java)) {&#10;            @Suppress(&quot;UNCHECKED_CAST&quot;)&#10;            return HistoryViewModel(repository) as T&#10;        }&#10;        throw IllegalArgumentException(&quot;Unknown ViewModel class&quot;)&#10;    }&#10;}&#10;&#10;" />
              <option name="updatedContent" value="package com.example.knowmyspot&#10;&#10;import androidx.lifecycle.*&#10;import com.example.knowmyspot.data.LocationRecord&#10;import com.example.knowmyspot.data.LocationRepository&#10;import kotlinx.coroutines.launch&#10;&#10;class HistoryViewModel(private val repository: LocationRepository) : ViewModel() {&#10;&#10;    private val _allRecords = MutableLiveData&lt;List&lt;LocationRecord&gt;&gt;()&#10;    val allRecords: LiveData&lt;List&lt;LocationRecord&gt;&gt; = _allRecords&#10;&#10;    init {&#10;        loadRecords()&#10;    }&#10;&#10;    private fun loadRecords() {&#10;        viewModelScope.launch {&#10;            _allRecords.postValue(repository.getAllRecords())&#10;        }&#10;    }&#10;&#10;    fun update(locationRecord: LocationRecord) = viewModelScope.launch {&#10;        repository.update(locationRecord)&#10;        loadRecords()&#10;    }&#10;&#10;    fun delete(locationRecord: LocationRecord) = viewModelScope.launch {&#10;        repository.delete(locationRecord)&#10;        loadRecords()&#10;    }&#10;}&#10;&#10;class HistoryViewModelFactory(private val repository: LocationRepository) : ViewModelProvider.Factory {&#10;    override fun &lt;T : ViewModel&gt; create(modelClass: Class&lt;T&gt;): T {&#10;        if (modelClass.isAssignableFrom(HistoryViewModel::class.java)) {&#10;            @Suppress(&quot;UNCHECKED_CAST&quot;)&#10;            return HistoryViewModel(repository) as T&#10;        }&#10;        throw IllegalArgumentException(&quot;Unknown ViewModel class&quot;)&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/knowmyspot/LocationApplication.kt">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/knowmyspot/LocationApplication.kt" />
              <option name="originalContent" value="package com.example.knowmyspot&#10;&#10;import android.app.Application&#10;import com.example.knowmyspot.data.AppDatabase&#10;import com.example.knowmyspot.data.LocationRepository&#10;&#10;class LocationApplication : Application() {&#10;    val database by lazy { AppDatabase.getDatabase(this) }&#10;    val repository by lazy { LocationRepository(database.locationDao()) }&#10;}&#10;&#10;" />
              <option name="updatedContent" value="package com.example.knowmyspot&#10;&#10;import android.app.Application&#10;import com.example.knowmyspot.data.AppDatabase&#10;import com.example.knowmyspot.data.LocationRepository&#10;&#10;class LocationApplication : Application() {&#10;    val database: AppDatabase by lazy { AppDatabase(this) }&#10;    val repository: LocationRepository by lazy { LocationRepository(database) }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/knowmyspot/MainActivity.kt">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/knowmyspot/MainActivity.kt" />
              <option name="originalContent" value="package com.example.knowmyspot&#10;&#10;import android.Manifest&#10;import android.content.Intent&#10;import android.content.pm.PackageManager&#10;import android.location.Geocoder&#10;import android.location.Location&#10;import android.os.Bundle&#10;import android.util.Log&#10;import android.view.View&#10;import android.widget.Button&#10;import android.widget.ImageButton&#10;import android.widget.ProgressBar&#10;import android.widget.TextView&#10;import androidx.annotation.RequiresPermission&#10;import androidx.appcompat.app.AppCompatActivity&#10;import androidx.core.app.ActivityCompat&#10;import androidx.lifecycle.lifecycleScope&#10;import com.example.knowmyspot.data.LocationRecord&#10;import com.google.android.gms.location.FusedLocationProviderClient&#10;import com.google.android.gms.location.LocationServices&#10;import kotlinx.coroutines.launch&#10;import retrofit2.Call&#10;import retrofit2.Callback&#10;import retrofit2.Response&#10;import retrofit2.Retrofit&#10;import retrofit2.converter.gson.GsonConverterFactory&#10;import retrofit2.http.GET&#10;import retrofit2.http.Query&#10;import java.io.IOException&#10;import java.util.*&#10;&#10;class MainActivity : AppCompatActivity() {&#10;    private lateinit var fusedLocationClient: FusedLocationProviderClient&#10;    private lateinit var tvLocation: TextView&#10;    private lateinit var tvCoordinates: TextView&#10;    private lateinit var tvWeather: TextView&#10;    private lateinit var btnRefresh: ImageButton&#10;    private lateinit var progressBar: ProgressBar&#10;    private lateinit var geocoder: Geocoder&#10;&#10;    private val repository by lazy { (application as LocationApplication).repository }&#10;&#10;    private var lastLat: Double? = null&#10;    private var lastLon: Double? = null&#10;    private var lastWeather: String? = null&#10;    private val weatherApiKey = &quot;daf995ddd2e62368f8cb8e6151c40a4e&quot;&#10;    private val weatherApi: WeatherApi by lazy {&#10;        Retrofit.Builder()&#10;            .baseUrl(&quot;https://api.openweathermap.org/data/2.5/&quot;)&#10;            .addConverterFactory(GsonConverterFactory.create())&#10;            .build()&#10;            .create(WeatherApi::class.java)&#10;    }&#10;&#10;    @RequiresPermission(allOf = [Manifest.permission.ACCESS_FINE_LOCATION, Manifest.permission.ACCESS_COARSE_LOCATION])&#10;    override fun onCreate(savedInstanceState: Bundle?) {&#10;        super.onCreate(savedInstanceState)&#10;        setContentView(R.layout.activity_main)&#10;&#10;        fusedLocationClient = LocationServices.getFusedLocationProviderClient(this)&#10;        tvLocation = findViewById(R.id.tvLocation)&#10;        tvCoordinates = findViewById(R.id.tvCoordinates)&#10;        tvWeather = findViewById(R.id.tvWeather)&#10;        btnRefresh = findViewById(R.id.btnRefresh)&#10;        progressBar = findViewById(R.id.progressBar)&#10;        geocoder = Geocoder(this, Locale.getDefault())&#10;&#10;        findViewById&lt;Button&gt;(R.id.btnHistory).setOnClickListener {&#10;            startActivity(Intent(this, HistoryActivity::class.java))&#10;        }&#10;        findViewById&lt;Button&gt;(R.id.btnSettings).setOnClickListener {&#10;            startActivity(Intent(this, SettingsActivity::class.java))&#10;        }&#10;&#10;        btnRefresh.setOnClickListener {&#10;            getLastLocation()&#10;        }&#10;        getLastLocation()&#10;    }&#10;&#10;    @RequiresPermission(anyOf = [Manifest.permission.ACCESS_FINE_LOCATION, Manifest.permission.ACCESS_COARSE_LOCATION])&#10;    private fun getLastLocation() {&#10;        progressBar.visibility = View.VISIBLE&#10;        if (ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED &amp;&amp;&#10;            ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_COARSE_LOCATION) != PackageManager.PERMISSION_GRANTED) {&#10;            ActivityCompat.requestPermissions(this, arrayOf(Manifest.permission.ACCESS_FINE_LOCATION), 100)&#10;            progressBar.visibility = View.GONE&#10;            return&#10;        }&#10;        fusedLocationClient.lastLocation.addOnSuccessListener { location: Location? -&gt;&#10;            if (location != null) {&#10;                lastLat = location.latitude&#10;                lastLon = location.longitude&#10;                tvCoordinates.text = &quot;Lat: %.5f, Lon: %.5f&quot;.format(location.latitude, location.longitude)&#10;                lifecycleScope.launch {&#10;                    val address = getAddressFromLocation(location)&#10;                    tvLocation.text = address ?: &quot;Adresa nenalezena&quot;&#10;                    getWeather(address)&#10;                }&#10;            } else {&#10;                tvLocation.text = &quot;Poloha není dostupná&quot;&#10;                tvWeather.text = &quot;Počasí: --&quot;&#10;                progressBar.visibility = View.GONE&#10;            }&#10;        }&#10;    }&#10;&#10;    private fun getWeather(address: String?) {&#10;        val lat = lastLat&#10;        val lon = lastLon&#10;        if (lat == null || lon == null) {&#10;            tvWeather.text = &quot;Počasí: --&quot;&#10;            Log.e(&quot;Weather&quot;, &quot;Souřadnice nejsou k dispozici&quot;)&#10;            progressBar.visibility = View.GONE&#10;            return&#10;        }&#10;        weatherApi.getWeather(lat, lon, weatherApiKey).enqueue(object : Callback&lt;WeatherResponse&gt; {&#10;            override fun onResponse(call: Call&lt;WeatherResponse&gt;, response: Response&lt;WeatherResponse&gt;) {&#10;                if (!response.isSuccessful) {&#10;                    tvWeather.text = &quot;Počasí: --&quot;&#10;                    Log.e(&quot;Weather&quot;, &quot;Chyba HTTP: ${response.code()} ${response.message()}&quot;)&#10;                    progressBar.visibility = View.GONE&#10;                    return&#10;                }&#10;                val body = response.body()&#10;                if (body != null) {&#10;                    val desc = body.weather.firstOrNull()?.description ?: &quot;--&quot;&#10;                    val temp = body.main.temp&#10;                    val weatherText = &quot;Počasí: $temp°C, $desc&quot;&#10;                    tvWeather.text = weatherText&#10;                    lastWeather = weatherText&#10;                    // Uložení do historie&#10;                    val lat = lastLat&#10;                    val lon = lastLon&#10;                    if (lat != null &amp;&amp; lon != null) {&#10;                        lifecycleScope.launch {&#10;                            repository.insert(&#10;                                LocationRecord(&#10;                                    latitude = lat,&#10;                                    longitude = lon,&#10;                                    timestamp = System.currentTimeMillis(),&#10;                                    address = address ?: &quot;Neznámá adresa&quot;,&#10;                                    weather = weatherText&#10;                                )&#10;                            )&#10;                        }&#10;                    }&#10;                    Log.d(&quot;Weather&quot;, &quot;Úspěch: $temp°C, $desc&quot;)&#10;                } else {&#10;                    tvWeather.text = &quot;Počas��: --&quot;&#10;                    Log.e(&quot;Weather&quot;, &quot;Tělo odpovědi je null&quot;)&#10;                }&#10;                progressBar.visibility = View.GONE&#10;            }&#10;            override fun onFailure(call: Call&lt;WeatherResponse&gt;, t: Throwable) {&#10;                tvWeather.text = &quot;Počasí: --&quot;&#10;                Log.e(&quot;Weather&quot;, &quot;Chyba volání: ${t.message}&quot;, t)&#10;                progressBar.visibility = View.GONE&#10;            }&#10;        })&#10;    }&#10;&#10;    @RequiresPermission(allOf = [Manifest.permission.ACCESS_FINE_LOCATION, Manifest.permission.ACCESS_COARSE_LOCATION])&#10;    override fun onRequestPermissionsResult(requestCode: Int, permissions: Array&lt;out String&gt;, grantResults: IntArray) {&#10;        super.onRequestPermissionsResult(requestCode, permissions, grantResults)&#10;        if (requestCode == 100 &amp;&amp; grantResults.isNotEmpty() &amp;&amp; grantResults[0] == PackageManager.PERMISSION_GRANTED) {&#10;            getLastLocation()&#10;        }&#10;    }&#10;&#10;    private fun getAddressFromLocation(location: Location): String? {&#10;        return try {&#10;            val addresses = geocoder.getFromLocation(location.latitude, location.longitude, 1)&#10;            if (addresses?.isNotEmpty() == true) {&#10;                addresses[0].getAddressLine(0)&#10;            } else {&#10;                null&#10;            }&#10;        } catch (e: IOException) {&#10;            Log.e(&quot;Geocoder&quot;, &quot;Nelze získat adresu&quot;, e)&#10;            null&#10;        }&#10;    }&#10;}&#10;&#10;// --- OpenWeatherMap API rozhraní ---&#10;interface WeatherApi {&#10;    @GET(&quot;weather&quot;)&#10;    fun getWeather(&#10;        @Query(&quot;lat&quot;) lat: Double,&#10;        @Query(&quot;lon&quot;) lon: Double,&#10;        @Query(&quot;appid&quot;) apiKey: String,&#10;        @Query(&quot;units&quot;) units: String = &quot;metric&quot;,&#10;        @Query(&quot;lang&quot;) lang: String = &quot;cz&quot;&#10;    ): Call&lt;WeatherResponse&gt;&#10;}&#10;&#10;data class WeatherResponse(&#10;    val weather: List&lt;WeatherDesc&gt;,&#10;    val main: MainWeather&#10;)&#10;data class WeatherDesc(val description: String)&#10;data class MainWeather(val temp: Double)&#10;" />
              <option name="updatedContent" value="package com.example.knowmyspot&#10;&#10;import android.Manifest&#10;import android.content.Intent&#10;import android.content.pm.PackageManager&#10;import android.location.Geocoder&#10;import android.location.Location&#10;import android.os.Bundle&#10;import android.util.Log&#10;import android.view.View&#10;import android.widget.Button&#10;import android.widget.ImageButton&#10;import android.widget.ProgressBar&#10;import android.widget.TextView&#10;import androidx.annotation.RequiresPermission&#10;import androidx.appcompat.app.AppCompatActivity&#10;import androidx.core.app.ActivityCompat&#10;import androidx.lifecycle.lifecycleScope&#10;import com.example.knowmyspot.data.LocationRecord&#10;import com.google.android.gms.location.FusedLocationProviderClient&#10;import com.google.android.gms.location.LocationServices&#10;import kotlinx.coroutines.launch&#10;import retrofit2.Call&#10;import retrofit2.Callback&#10;import retrofit2.Response&#10;import retrofit2.Retrofit&#10;import retrofit2.converter.gson.GsonConverterFactory&#10;import retrofit2.http.GET&#10;import retrofit2.http.Query&#10;import java.io.IOException&#10;import java.util.*&#10;&#10;class MainActivity : AppCompatActivity() {&#10;    private lateinit var fusedLocationClient: FusedLocationProviderClient&#10;    private lateinit var tvLocation: TextView&#10;    private lateinit var tvCoordinates: TextView&#10;    private lateinit var tvWeather: TextView&#10;    private lateinit var btnRefresh: ImageButton&#10;    private lateinit var progressBar: ProgressBar&#10;    private lateinit var geocoder: Geocoder&#10;&#10;    private val repository by lazy { (application as LocationApplication).repository }&#10;&#10;    private var lastLat: Double? = null&#10;    private var lastLon: Double? = null&#10;    private var lastWeather: String? = null&#10;    private val weatherApiKey = &quot;daf995ddd2e62368f8cb8e6151c40a4e&quot;&#10;    private val weatherApi: WeatherApi by lazy {&#10;        Retrofit.Builder()&#10;            .baseUrl(&quot;https://api.openweathermap.org/data/2.5/&quot;)&#10;            .addConverterFactory(GsonConverterFactory.create())&#10;            .build()&#10;            .create(WeatherApi::class.java)&#10;    }&#10;&#10;    @RequiresPermission(allOf = [Manifest.permission.ACCESS_FINE_LOCATION, Manifest.permission.ACCESS_COARSE_LOCATION])&#10;    override fun onCreate(savedInstanceState: Bundle?) {&#10;        super.onCreate(savedInstanceState)&#10;        setContentView(R.layout.activity_main)&#10;&#10;        fusedLocationClient = LocationServices.getFusedLocationProviderClient(this)&#10;        tvLocation = findViewById(R.id.tvLocation)&#10;        tvCoordinates = findViewById(R.id.tvCoordinates)&#10;        tvWeather = findViewById(R.id.tvWeather)&#10;        btnRefresh = findViewById(R.id.btnRefresh)&#10;        progressBar = findViewById(R.id.progressBar)&#10;        geocoder = Geocoder(this, Locale.getDefault())&#10;&#10;        findViewById&lt;Button&gt;(R.id.btnHistory).setOnClickListener {&#10;            startActivity(Intent(this, HistoryActivity::class.java))&#10;        }&#10;        findViewById&lt;Button&gt;(R.id.btnSettings).setOnClickListener {&#10;            startActivity(Intent(this, SettingsActivity::class.java))&#10;        }&#10;&#10;        btnRefresh.setOnClickListener {&#10;            getLastLocation()&#10;        }&#10;        getLastLocation()&#10;    }&#10;&#10;    @RequiresPermission(anyOf = [Manifest.permission.ACCESS_FINE_LOCATION, Manifest.permission.ACCESS_COARSE_LOCATION])&#10;    private fun getLastLocation() {&#10;        btnRefresh.visibility = View.GONE&#10;        progressBar.visibility = View.VISIBLE&#10;        if (ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED &amp;&amp;&#10;            ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_COARSE_LOCATION) != PackageManager.PERMISSION_GRANTED) {&#10;            ActivityCompat.requestPermissions(this, arrayOf(Manifest.permission.ACCESS_FINE_LOCATION), 100)&#10;            progressBar.visibility = View.GONE&#10;            btnRefresh.visibility = View.VISIBLE&#10;            return&#10;        }&#10;        fusedLocationClient.lastLocation.addOnSuccessListener { location: Location? -&gt;&#10;            if (location != null) {&#10;                lastLat = location.latitude&#10;                lastLon = location.longitude&#10;                tvCoordinates.text = &quot;Lat: %.5f, Lon: %.5f&quot;.format(location.latitude, location.longitude)&#10;                lifecycleScope.launch {&#10;                    val address = getAddressFromLocation(location)&#10;                    tvLocation.text = address ?: &quot;Adresa nenalezena&quot;&#10;                    getWeather(address)&#10;                }&#10;            } else {&#10;                tvLocation.text = &quot;Poloha není dostupná&quot;&#10;                tvWeather.text = &quot;Počasí: --&quot;&#10;                progressBar.visibility = View.GONE&#10;                btnRefresh.visibility = View.VISIBLE&#10;            }&#10;        }&#10;    }&#10;&#10;    private fun getWeather(address: String?) {&#10;        val lat = lastLat&#10;        val lon = lastLon&#10;        if (lat == null || lon == null) {&#10;            tvWeather.text = &quot;Počasí: --&quot;&#10;            Log.e(&quot;Weather&quot;, &quot;Souřadnice nejsou k dispozici&quot;)&#10;            progressBar.visibility = View.GONE&#10;            btnRefresh.visibility = View.VISIBLE&#10;            return&#10;        }&#10;        weatherApi.getWeather(lat, lon, weatherApiKey).enqueue(object : Callback&lt;WeatherResponse&gt; {&#10;            override fun onResponse(call: Call&lt;WeatherResponse&gt;, response: Response&lt;WeatherResponse&gt;) {&#10;                if (!response.isSuccessful) {&#10;                    tvWeather.text = &quot;Počasí: --&quot;&#10;                    Log.e(&quot;Weather&quot;, &quot;Chyba HTTP: ${response.code()} ${response.message()}&quot;)&#10;                    progressBar.visibility = View.GONE&#10;                    btnRefresh.visibility = View.VISIBLE&#10;                    return&#10;                }&#10;                val body = response.body()&#10;                if (body != null) {&#10;                    val desc = body.weather.firstOrNull()?.description ?: &quot;--&quot;&#10;                    val temp = body.main.temp&#10;                    val weatherText = &quot;Počasí: $temp°C, $desc&quot;&#10;                    tvWeather.text = weatherText&#10;                    lastWeather = weatherText&#10;                    // Uložení do historie&#10;                    val lat = lastLat&#10;                    val lon = lastLon&#10;                    if (lat != null &amp;&amp; lon != null) {&#10;                        lifecycleScope.launch {&#10;                            repository.insert(&#10;                                LocationRecord(&#10;                                    latitude = lat,&#10;                                    longitude = lon,&#10;                                    timestamp = System.currentTimeMillis(),&#10;                                    address = address ?: &quot;Neznámá adresa&quot;,&#10;                                    weather = weatherText&#10;                                )&#10;                            )&#10;                        }&#10;                    }&#10;                    Log.d(&quot;Weather&quot;, &quot;Úspěch: $temp°C, $desc&quot;)&#10;                } else {&#10;                    tvWeather.text = &quot;Počas��: --&quot;&#10;                    Log.e(&quot;Weather&quot;, &quot;Tělo odpovědi je null&quot;)&#10;                }&#10;                progressBar.visibility = View.GONE&#10;                btnRefresh.visibility = View.VISIBLE&#10;            }&#10;            override fun onFailure(call: Call&lt;WeatherResponse&gt;, t: Throwable) {&#10;                tvWeather.text = &quot;Počasí: --&quot;&#10;                Log.e(&quot;Weather&quot;, &quot;Chyba volání: ${t.message}&quot;, t)&#10;                progressBar.visibility = View.GONE&#10;                btnRefresh.visibility = View.VISIBLE&#10;            }&#10;        })&#10;    }&#10;&#10;    @RequiresPermission(allOf = [Manifest.permission.ACCESS_FINE_LOCATION, Manifest.permission.ACCESS_COARSE_LOCATION])&#10;    override fun onRequestPermissionsResult(requestCode: Int, permissions: Array&lt;out String&gt;, grantResults: IntArray) {&#10;        super.onRequestPermissionsResult(requestCode, permissions, grantResults)&#10;        if (requestCode == 100 &amp;&amp; grantResults.isNotEmpty() &amp;&amp; grantResults[0] == PackageManager.PERMISSION_GRANTED) {&#10;            getLastLocation()&#10;        }&#10;    }&#10;&#10;    private fun getAddressFromLocation(location: Location): String? {&#10;        return try {&#10;            val addresses = geocoder.getFromLocation(location.latitude, location.longitude, 1)&#10;            if (addresses?.isNotEmpty() == true) {&#10;                addresses[0].getAddressLine(0)&#10;            } else {&#10;                null&#10;            }&#10;        } catch (e: IOException) {&#10;            Log.e(&quot;Geocoder&quot;, &quot;Nelze získat adresu&quot;, e)&#10;            null&#10;        }&#10;    }&#10;}&#10;&#10;// --- OpenWeatherMap API rozhraní ---&#10;interface WeatherApi {&#10;    @GET(&quot;weather&quot;)&#10;    fun getWeather(&#10;        @Query(&quot;lat&quot;) lat: Double,&#10;        @Query(&quot;lon&quot;) lon: Double,&#10;        @Query(&quot;appid&quot;) apiKey: String,&#10;        @Query(&quot;units&quot;) units: String = &quot;metric&quot;,&#10;        @Query(&quot;lang&quot;) lang: String = &quot;cz&quot;&#10;    ): Call&lt;WeatherResponse&gt;&#10;}&#10;&#10;data class WeatherResponse(&#10;    val weather: List&lt;WeatherDesc&gt;,&#10;    val main: MainWeather&#10;)&#10;data class WeatherDesc(val description: String)&#10;data class MainWeather(val temp: Double)" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/knowmyspot/SettingsActivity.kt">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/knowmyspot/SettingsActivity.kt" />
              <option name="originalContent" value="package com.example.knowmyspot&#10;&#10;import android.os.Bundle&#10;import androidx.appcompat.app.AppCompatActivity&#10;&#10;class SettingsActivity : AppCompatActivity() {&#10;    override fun onCreate(savedInstanceState: Bundle?) {&#10;        super.onCreate(savedInstanceState)&#10;        setContentView(R.layout.activity_settings)&#10;    }&#10;    }&#10;&#10;" />
              <option name="updatedContent" value="package com.example.knowmyspot&#10;&#10;import android.os.Bundle&#10;import androidx.appcompat.app.AppCompatActivity&#10;import androidx.appcompat.widget.Toolbar&#10;&#10;class SettingsActivity : AppCompatActivity() {&#10;    override fun onCreate(savedInstanceState: Bundle?) {&#10;        super.onCreate(savedInstanceState)&#10;        setContentView(R.layout.activity_settings)&#10;&#10;        val toolbar = findViewById&lt;Toolbar&gt;(R.id.toolbar)&#10;        setSupportActionBar(toolbar)&#10;        supportActionBar?.setDisplayHomeAsUpEnabled(true)&#10;        toolbar.setNavigationOnClickListener {&#10;            finish()&#10;        }&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/knowmyspot/data/AppDatabase.kt">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/knowmyspot/data/AppDatabase.kt" />
              <option name="originalContent" value="package com.example.knowmyspot.data&#10;&#10;import android.content.Context&#10;import android.database.sqlite.SQLiteDatabase&#10;import android.database.sqlite.SQLiteOpenHelper&#10;import android.content.ContentValues&#10;&#10;class AppDatabase(context: Context) : SQLiteOpenHelper(context, DATABASE_NAME, null, DATABASE_VERSION) {&#10;&#10;    companion object {&#10;        private const val DATABASE_NAME = &quot;location_history.db&quot;&#10;        private const val DATABASE_VERSION = 3 // zvýšení verze kvůli migraci&#10;&#10;        const val TABLE_NAME = &quot;location_records&quot;&#10;        const val COLUMN_ID = &quot;id&quot;&#10;        const val COLUMN_LAT = &quot;latitude&quot;&#10;        const val COLUMN_LNG = &quot;longitude&quot;&#10;        const val COLUMN_TIMESTAMP = &quot;timestamp&quot;&#10;        const val COLUMN_ADDRESS = &quot;address&quot;&#10;        const val COLUMN_WEATHER = &quot;weather&quot;&#10;        const val COLUMN_NOTE = &quot;note&quot;&#10;&#10;        private const val SQL_CREATE_TABLE =&#10;            &quot;CREATE TABLE $TABLE_NAME (&quot; +&#10;                    &quot;$COLUMN_ID INTEGER PRIMARY KEY AUTOINCREMENT, &quot; +&#10;                    &quot;$COLUMN_LAT REAL NOT NULL, &quot; +&#10;                    &quot;$COLUMN_LNG REAL NOT NULL, &quot; +&#10;                    &quot;$COLUMN_TIMESTAMP INTEGER NOT NULL, &quot; +&#10;                    &quot;$COLUMN_ADDRESS TEXT NOT NULL, &quot; +&#10;                    &quot;$COLUMN_WEATHER TEXT, &quot; +&#10;                    &quot;$COLUMN_NOTE TEXT&quot; +&#10;            &quot;)&quot;&#10;        private const val SQL_DROP_TABLE = &quot;DROP TABLE IF EXISTS $TABLE_NAME&quot;&#10;    }&#10;&#10;    override fun onCreate(db: SQLiteDatabase) {&#10;        db.execSQL(SQL_CREATE_TABLE)&#10;    }&#10;&#10;    override fun onUpgrade(db: SQLiteDatabase, oldVersion: Int, newVersion: Int) {&#10;        db.execSQL(SQL_DROP_TABLE)&#10;        onCreate(db)&#10;    }&#10;&#10;    fun insertRecord(record: LocationRecord): Long {&#10;        val db = writableDatabase&#10;        val values = ContentValues().apply {&#10;            put(COLUMN_LAT, record.latitude)&#10;            put(COLUMN_LNG, record.longitude)&#10;            put(COLUMN_TIMESTAMP, record.timestamp)&#10;            put(COLUMN_ADDRESS, record.address)&#10;            put(COLUMN_WEATHER, record.weather)&#10;            put(COLUMN_NOTE, record.note)&#10;        }&#10;        return db.insert(TABLE_NAME, null, values)&#10;    }&#10;&#10;    fun updateRecord(record: LocationRecord): Int {&#10;        val db = writableDatabase&#10;        val values = ContentValues().apply {&#10;            put(COLUMN_LAT, record.latitude)&#10;            put(COLUMN_LNG, record.longitude)&#10;            put(COLUMN_TIMESTAMP, record.timestamp)&#10;            put(COLUMN_ADDRESS, record.address)&#10;            put(COLUMN_WEATHER, record.weather)&#10;            put(COLUMN_NOTE, record.note)&#10;        }&#10;        return db.update(TABLE_NAME, values, &quot;$COLUMN_ID = ?&quot;, arrayOf(record.id.toString()))&#10;    }&#10;&#10;    fun getAllRecords(): List&lt;LocationRecord&gt; {&#10;        val db = readableDatabase&#10;        val cursor = db.query(&#10;            TABLE_NAME,&#10;            arrayOf(COLUMN_ID, COLUMN_LAT, COLUMN_LNG, COLUMN_TIMESTAMP, COLUMN_ADDRESS, COLUMN_WEATHER, COLUMN_NOTE),&#10;            null, null, null, null,&#10;            &quot;$COLUMN_TIMESTAMP DESC&quot;&#10;        )&#10;        val records = mutableListOf&lt;LocationRecord&gt;()&#10;        while (cursor.moveToNext()) {&#10;            val id = cursor.getLong(cursor.getColumnIndexOrThrow(COLUMN_ID)).toInt()&#10;            val lat = cursor.getDouble(cursor.getColumnIndexOrThrow(COLUMN_LAT))&#10;            val lng = cursor.getDouble(cursor.getColumnIndexOrThrow(COLUMN_LNG))&#10;            val ts = cursor.getLong(cursor.getColumnIndexOrThrow(COLUMN_TIMESTAMP))&#10;            val address = cursor.getString(cursor.getColumnIndexOrThrow(COLUMN_ADDRESS))&#10;            val weather = cursor.getString(cursor.getColumnIndexOrThrow(COLUMN_WEATHER))&#10;            val note = cursor.getString(cursor.getColumnIndexOrThrow(COLUMN_NOTE))&#10;            records.add(LocationRecord(id, lat, lng, ts, address, weather, note))&#10;        }&#10;        cursor.close()&#10;        return records&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="package com.example.knowmyspot.data&#10;&#10;import android.content.Context&#10;import android.database.sqlite.SQLiteDatabase&#10;import android.database.sqlite.SQLiteOpenHelper&#10;import android.content.ContentValues&#10;&#10;class AppDatabase(context: Context) : SQLiteOpenHelper(context, DATABASE_NAME, null, DATABASE_VERSION) {&#10;&#10;    companion object {&#10;        private const val DATABASE_NAME = &quot;location_history.db&quot;&#10;        private const val DATABASE_VERSION = 3 // zvýšení verze kvůli migraci&#10;&#10;        const val TABLE_NAME = &quot;location_records&quot;&#10;        const val COLUMN_ID = &quot;id&quot;&#10;        const val COLUMN_LAT = &quot;latitude&quot;&#10;        const val COLUMN_LNG = &quot;longitude&quot;&#10;        const val COLUMN_TIMESTAMP = &quot;timestamp&quot;&#10;        const val COLUMN_ADDRESS = &quot;address&quot;&#10;        const val COLUMN_WEATHER = &quot;weather&quot;&#10;        const val COLUMN_NOTE = &quot;note&quot;&#10;&#10;        private const val SQL_CREATE_TABLE =&#10;            &quot;CREATE TABLE $TABLE_NAME (&quot; +&#10;                    &quot;$COLUMN_ID INTEGER PRIMARY KEY AUTOINCREMENT, &quot; +&#10;                    &quot;$COLUMN_LAT REAL NOT NULL, &quot; +&#10;                    &quot;$COLUMN_LNG REAL NOT NULL, &quot; +&#10;                    &quot;$COLUMN_TIMESTAMP INTEGER NOT NULL, &quot; +&#10;                    &quot;$COLUMN_ADDRESS TEXT NOT NULL, &quot; +&#10;                    &quot;$COLUMN_WEATHER TEXT, &quot; +&#10;                    &quot;$COLUMN_NOTE TEXT&quot; +&#10;            &quot;)&quot;&#10;        private const val SQL_DROP_TABLE = &quot;DROP TABLE IF EXISTS $TABLE_NAME&quot;&#10;    }&#10;&#10;    override fun onCreate(db: SQLiteDatabase) {&#10;        db.execSQL(SQL_CREATE_TABLE)&#10;    }&#10;&#10;    override fun onUpgrade(db: SQLiteDatabase, oldVersion: Int, newVersion: Int) {&#10;        db.execSQL(SQL_DROP_TABLE)&#10;        onCreate(db)&#10;    }&#10;&#10;    fun insertRecord(record: LocationRecord): Long {&#10;        val db = writableDatabase&#10;        val values = ContentValues().apply {&#10;            put(COLUMN_LAT, record.latitude)&#10;            put(COLUMN_LNG, record.longitude)&#10;            put(COLUMN_TIMESTAMP, record.timestamp)&#10;            put(COLUMN_ADDRESS, record.address)&#10;            put(COLUMN_WEATHER, record.weather)&#10;            put(COLUMN_NOTE, record.note)&#10;        }&#10;        return db.insert(TABLE_NAME, null, values)&#10;    }&#10;&#10;    fun updateRecord(record: LocationRecord): Int {&#10;        val db = writableDatabase&#10;        val values = ContentValues().apply {&#10;            put(COLUMN_LAT, record.latitude)&#10;            put(COLUMN_LNG, record.longitude)&#10;            put(COLUMN_TIMESTAMP, record.timestamp)&#10;            put(COLUMN_ADDRESS, record.address)&#10;            put(COLUMN_WEATHER, record.weather)&#10;            put(COLUMN_NOTE, record.note)&#10;        }&#10;        return db.update(TABLE_NAME, values, &quot;$COLUMN_ID = ?&quot;, arrayOf(record.id.toString()))&#10;    }&#10;&#10;    fun deleteRecord(record: LocationRecord) {&#10;        val db = writableDatabase&#10;        db.delete(TABLE_NAME, &quot;$COLUMN_ID = ?&quot;, arrayOf(record.id.toString()))&#10;    }&#10;&#10;    fun getAllRecords(): List&lt;LocationRecord&gt; {&#10;        val db = readableDatabase&#10;        val cursor = db.query(&#10;            TABLE_NAME,&#10;            arrayOf(COLUMN_ID, COLUMN_LAT, COLUMN_LNG, COLUMN_TIMESTAMP, COLUMN_ADDRESS, COLUMN_WEATHER, COLUMN_NOTE),&#10;            null, null, null, null,&#10;            &quot;$COLUMN_TIMESTAMP DESC&quot;&#10;        )&#10;        val records = mutableListOf&lt;LocationRecord&gt;()&#10;        while (cursor.moveToNext()) {&#10;            val id = cursor.getLong(cursor.getColumnIndexOrThrow(COLUMN_ID)).toInt()&#10;            val lat = cursor.getDouble(cursor.getColumnIndexOrThrow(COLUMN_LAT))&#10;            val lng = cursor.getDouble(cursor.getColumnIndexOrThrow(COLUMN_LNG))&#10;            val ts = cursor.getLong(cursor.getColumnIndexOrThrow(COLUMN_TIMESTAMP))&#10;            val address = cursor.getString(cursor.getColumnIndexOrThrow(COLUMN_ADDRESS))&#10;            val weather = cursor.getString(cursor.getColumnIndexOrThrow(COLUMN_WEATHER))&#10;            val note = cursor.getString(cursor.getColumnIndexOrThrow(COLUMN_NOTE))&#10;            records.add(LocationRecord(id, lat, lng, ts, address, weather, note))&#10;        }&#10;        cursor.close()&#10;        return records&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/knowmyspot/data/LocationDao.kt">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/knowmyspot/data/LocationDao.kt" />
              <option name="originalContent" value="package com.example.knowmyspot.data&#10;&#10;import androidx.room.Dao&#10;import androidx.room.Insert&#10;import androidx.room.Query&#10;import androidx.room.Update&#10;import kotlinx.coroutines.flow.Flow&#10;&#10;@Dao&#10;interface LocationDao {&#10;    @Insert&#10;    suspend fun insert(locationRecord: LocationRecord)&#10;&#10;    @Query(&quot;SELECT * FROM location_records ORDER BY timestamp DESC&quot;)&#10;    fun getAllRecords(): Flow&lt;List&lt;LocationRecord&gt;&gt;&#10;&#10;    @Update&#10;    suspend fun update(locationRecord: LocationRecord)&#10;}&#10;" />
              <option name="updatedContent" value="package com.example.knowmyspot.data&#10;&#10;// Tento soubor je nyní prázdný, protože Room se již nepoužívá." />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/knowmyspot/data/LocationRecord.kt">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/knowmyspot/data/LocationRecord.kt" />
              <option name="originalContent" value="package com.example.knowmyspot.data&#10;&#10;data class LocationRecord(&#10;    val id: Int = 0,&#10;    val latitude: Double,&#10;    val longitude: Double,&#10;    val timestamp: Long,&#10;    val address: String,&#10;    val note: String? = null&#10;)&#10;" />
              <option name="updatedContent" value="package com.example.knowmyspot.data&#10;&#10;data class LocationRecord(&#10;    val id: Int = 0,&#10;    val latitude: Double,&#10;    val longitude: Double,&#10;    val timestamp: Long,&#10;    val address: String,&#10;    val weather: String?,&#10;    val note: String? = null&#10;)" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/knowmyspot/data/LocationRepository.kt">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/knowmyspot/data/LocationRepository.kt" />
              <option name="originalContent" value="package com.example.knowmyspot.data&#10;&#10;import kotlinx.coroutines.flow.Flow&#10;&#10;class LocationRepository(private val locationDao: LocationDao) {&#10;    val allRecords: Flow&lt;List&lt;LocationRecord&gt;&gt; = locationDao.getAllRecords()&#10;&#10;    suspend fun insert(locationRecord: LocationRecord) {&#10;        locationDao.insert(locationRecord)&#10;    }&#10;}&#10;&#10;&#10;" />
              <option name="updatedContent" value="package com.example.knowmyspot.data&#10;&#10;class LocationRepository(private val db: AppDatabase) {&#10;    fun getAllRecords(): List&lt;LocationRecord&gt; = db.getAllRecords()&#10;&#10;    fun insert(locationRecord: LocationRecord) {&#10;        db.insertRecord(locationRecord)&#10;    }&#10;&#10;    fun update(locationRecord: LocationRecord) {&#10;        db.updateRecord(locationRecord)&#10;    }&#10;&#10;    fun delete(locationRecord: LocationRecord) {&#10;        db.deleteRecord(locationRecord)&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/drawable/ic_app_logo.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/drawable/ic_app_logo.xml" />
              <option name="updatedContent" value="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:width=&quot;48dp&quot;&#10;    android:height=&quot;48dp&quot;&#10;    android:viewportWidth=&quot;24.0&quot;&#10;    android:viewportHeight=&quot;24.0&quot;&gt;&#10;    &lt;path&#10;        android:fillColor=&quot;@color/colorPrimary&quot;&#10;        android:pathData=&quot;M12,2C8.13,2 5,5.13 5,9c0,5.25 7,13 7,13s7,-7.75 7,-13c0,-3.87 -3.13,-7 -7,-7zM12,11.5c-1.38,0 -2.5,-1.12 -2.5,-2.5s1.12,-2.5 2.5,-2.5 2.5,1.12 2.5,2.5 -1.12,2.5 -2.5,2.5z&quot;/&gt;&#10;&lt;/vector&gt;&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/drawable/ic_delete_24.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/drawable/ic_delete_24.xml" />
              <option name="updatedContent" value="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:width=&quot;24dp&quot;&#10;    android:height=&quot;24dp&quot;&#10;    android:viewportWidth=&quot;24.0&quot;&#10;    android:viewportHeight=&quot;24.0&quot;&#10;    android:tint=&quot;?attr/colorControlNormal&quot;&gt;&#10;  &lt;path&#10;      android:fillColor=&quot;@android:color/white&quot;&#10;      android:pathData=&quot;M6,19c0,1.1 0.9,2 2,2h8c1.1,0 2,-0.9 2,-2V7H6v12zM19,4h-3.5l-1,-1h-5l-1,1H5v2h14V4z&quot;/&gt;&#10;&lt;/vector&gt;&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/drawable/ic_edit_24.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/drawable/ic_edit_24.xml" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:width=&quot;24dp&quot;&#10;    android:height=&quot;24dp&quot;&#10;    android:viewportWidth=&quot;24&quot;&#10;    android:viewportHeight=&quot;24&quot;&gt;&#10;    &lt;path&#10;        android:fillColor=&quot;#FF000000&quot;&#10;        android:pathData=&quot;M3 17.25V21h3.75l11.06-11.06-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z&quot;/&gt;&#10;&lt;/vector&gt;&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/drawable/ic_history_24.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/drawable/ic_history_24.xml" />
              <option name="updatedContent" value="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:width=&quot;24dp&quot;&#10;    android:height=&quot;24dp&quot;&#10;    android:viewportWidth=&quot;24.0&quot;&#10;    android:viewportHeight=&quot;24.0&quot;&#10;    android:tint=&quot;?attr/colorControlNormal&quot;&gt;&#10;  &lt;path&#10;      android:fillColor=&quot;@android:color/white&quot;&#10;      android:pathData=&quot;M13,3c-4.97,0 -9,4.03 -9,9H1l3.89,3.89L9,12H6c0,-3.87 3.13,-7 7,-7s7,3.13 7,7 -3.13,7 -7,7c-1.93,0 -3.68,-0.79 -4.94,-2.06l-1.42,1.42C8.27,19.99 10.51,21 13,21c4.97,0 9,-4.03 9,-9s-4.03,-9 -9,-9zM12,8v5l4.25,2.52 0.75,-1.23 -3.5,-2.07V8H12z&quot;/&gt;&#10;&lt;/vector&gt;&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/drawable/ic_location_pin_24.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/drawable/ic_location_pin_24.xml" />
              <option name="updatedContent" value="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:width=&quot;24dp&quot;&#10;    android:height=&quot;24dp&quot;&#10;    android:viewportWidth=&quot;24.0&quot;&#10;    android:viewportHeight=&quot;24.0&quot;&#10;    android:tint=&quot;?attr/colorControlNormal&quot;&gt;&#10;  &lt;path&#10;      android:fillColor=&quot;@color/text_secondary&quot;&#10;      android:pathData=&quot;M12,2C8.13,2 5,5.13 5,9c0,5.25 7,13 7,13s7,-7.75 7,-13c0,-3.87 -3.13,-7 -7,-7zM12,11.5c-1.38,0 -2.5,-1.12 -2.5,-2.5s1.12,-2.5 2.5,-2.5 2.5,1.12 2.5,2.5 -1.12,2.5 -2.5,2.5z&quot;/&gt;&#10;&lt;/vector&gt;&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/drawable/ic_refresh_24.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/drawable/ic_refresh_24.xml" />
              <option name="updatedContent" value="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:width=&quot;24dp&quot;&#10;    android:height=&quot;24dp&quot;&#10;    android:viewportWidth=&quot;24.0&quot;&#10;    android:viewportHeight=&quot;24.0&quot;&#10;    android:tint=&quot;?attr/colorControlNormal&quot;&gt;&#10;  &lt;path&#10;      android:fillColor=&quot;@android:color/white&quot;&#10;      android:pathData=&quot;M17.65,6.35C16.2,4.9 14.21,4 12,4c-4.42,0 -7.99,3.58 -7.99,8s3.57,8 7.99,8c3.73,0 6.84,-2.55 7.73,-6h-2.08c-0.82,2.33 -3.04,4 -5.65,4 -3.31,0 -6,-2.69 -6,-6s2.69,-6 6,-6c1.66,0 3.14,0.69 4.22,1.78L13,11h7V4l-2.35,2.35z&quot;/&gt;&#10;&lt;/vector&gt;&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/drawable/ic_settings_24.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/drawable/ic_settings_24.xml" />
              <option name="updatedContent" value="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:width=&quot;24dp&quot;&#10;    android:height=&quot;24dp&quot;&#10;    android:viewportWidth=&quot;24.0&quot;&#10;    android:viewportHeight=&quot;24.0&quot;&#10;    android:tint=&quot;?attr/colorControlNormal&quot;&gt;&#10;  &lt;path&#10;      android:fillColor=&quot;@android:color/white&quot;&#10;      android:pathData=&quot;M19.43,12.98c0.04,-0.32 0.07,-0.64 0.07,-0.98s-0.03,-0.66 -0.07,-0.98l2.11,-1.65c0.19,-0.15 0.24,-0.42 0.12,-0.64l-2,-3.46c-0.12,-0.22 -0.39,-0.3 -0.61,-0.22l-2.49,1c-0.52,-0.4 -1.08,-0.73 -1.69,-0.98l-0.38,-2.65C14.46,2.18 14.25,2 14,2h-4c-0.25,0 -0.46,0.18 -0.49,0.42L9.13,5.07c-0.61,0.25 -1.17,0.59 -1.69,0.98l-2.49,-1c-0.23,-0.09 -0.49,0 -0.61,0.22l-2,3.46c-0.13,0.22 -0.07,0.49 0.12,0.64l2.11,1.65c-0.04,0.32 -0.07,0.65 -0.07,0.98s0.03,0.66 0.07,0.98l-2.11,1.65c-0.19,0.15 -0.24,0.42 -0.12,0.64l2,3.46c0.12,0.22 0.39,0.3 0.61,0.22l2.49,-1c0.52,0.4 1.08,0.73 1.69,0.98l0.38,2.65c0.03,0.24 0.24,0.42 0.49,0.42h4c0.25,0 0.46,-0.18 0.49,-0.42l0.38,-2.65c0.61,-0.25 1.17,-0.59 1.69,-0.98l2.49,1c0.23,0.09 0.49,0 0.61,-0.22l2,-3.46c0.12,-0.22 0.07,-0.49 -0.12,-0.64l-2.11,-1.65zM12,15.5c-1.93,0 -3.5,-1.57 -3.5,-3.5s1.57,-3.5 3.5,-3.5 3.5,1.57 3.5,3.5 -1.57,3.5 -3.5,3.5z&quot;/&gt;&#10;&lt;/vector&gt;&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/drawable/ic_weather_24.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/drawable/ic_weather_24.xml" />
              <option name="updatedContent" value="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:width=&quot;24dp&quot;&#10;    android:height=&quot;24dp&quot;&#10;    android:viewportWidth=&quot;24.0&quot;&#10;    android:viewportHeight=&quot;24.0&quot;&#10;    android:tint=&quot;?attr/colorControlNormal&quot;&gt;&#10;  &lt;path&#10;      android:fillColor=&quot;@color/text_secondary&quot;&#10;      android:pathData=&quot;M19.35,10.04C18.67,6.59 15.64,4 12,4 9.11,4 6.6,5.64 5.35,8.04 2.34,8.36 0,10.91 0,14c0,3.31 2.69,6 6,6h13c2.76,0 5,-2.24 5,-5 0,-2.64 -2.05,-4.78 -4.65,-4.96zM17,18H6c-2.21,0 -4,-1.79 -4,-4s1.79,-4 4,-4c0.71,0 1.38,0.19 1.97,0.52l1.03,0.58 0.51,-1.14C10.2,9.49 11.08,9 12,9c2.21,0 4,1.79 4,4h-1c0,-1.65 -1.35,-3 -3,-3s-3,1.35 -3,3h-1c0,-1.11 0.9,-2 2,-2s2,0.9 2,2h1c0,-2.21 -1.79,-4 -4,-4 -1.2,0 -2.26,0.54 -3,1.36 -1.27,-1.2 -3.13,-1.36 -4.61,-0.38C6.27,10.09 6,10.52 6,11H4c-1.65,0 -3,1.35 -3,3s1.35,3 3,3h13v-2z&quot;/&gt;&#10;&lt;/vector&gt;&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/layout/activity_history.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/layout/activity_history.xml" />
              <option name="originalContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;RelativeLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;match_parent&quot;&#10;    android:background=&quot;@color/background_color&quot;&gt;&#10;&#10;    &lt;com.google.android.material.appbar.AppBarLayout&#10;        android:id=&quot;@+id/appBarLayout&quot;&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&gt;&#10;&#10;        &lt;androidx.appcompat.widget.Toolbar&#10;            android:id=&quot;@+id/toolbar&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;?attr/actionBarSize&quot;&#10;            android:background=&quot;?attr/colorPrimary&quot;&#10;            app:title=&quot;Historie&quot;&#10;            app:titleTextColor=&quot;@color/white&quot; /&gt;&#10;&#10;    &lt;/com.google.android.material.appbar.AppBarLayout&gt;&#10;&#10;    &lt;androidx.recyclerview.widget.RecyclerView&#10;        android:id=&quot;@+id/rvHistory&quot;&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;match_parent&quot;&#10;        android:layout_below=&quot;@id/appBarLayout&quot;&#10;        android:padding=&quot;8dp&quot;&#10;        android:clipToPadding=&quot;false&quot;/&gt;&#10;&#10;&lt;/RelativeLayout&gt;&#10;" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;RelativeLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;match_parent&quot;&#10;    android:background=&quot;@color/background_color&quot;&gt;&#10;&#10;    &lt;com.google.android.material.appbar.AppBarLayout&#10;        android:id=&quot;@+id/appBarLayout&quot;&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&gt;&#10;&#10;        &lt;androidx.appcompat.widget.Toolbar&#10;            android:id=&quot;@+id/toolbar&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;?attr/actionBarSize&quot;&#10;            android:background=&quot;@color/colorPrimaryDark&quot;&#10;            app:title=&quot;Historie&quot;&#10;            app:titleTextColor=&quot;@color/white&quot; /&gt;&#10;&#10;    &lt;/com.google.android.material.appbar.AppBarLayout&gt;&#10;&#10;    &lt;androidx.recyclerview.widget.RecyclerView&#10;        android:id=&quot;@+id/rvHistory&quot;&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;match_parent&quot;&#10;        android:layout_below=&quot;@id/appBarLayout&quot;&#10;        android:padding=&quot;8dp&quot;&#10;        android:clipToPadding=&quot;false&quot;/&gt;&#10;&#10;&lt;/RelativeLayout&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/layout/activity_main.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/layout/activity_main.xml" />
              <option name="originalContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;androidx.coordinatorlayout.widget.CoordinatorLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;&#10;    xmlns:tools=&quot;http://schemas.android.com/tools&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;match_parent&quot;&#10;    android:background=&quot;@color/background_color&quot;&#10;    tools:context=&quot;.MainActivity&quot;&gt;&#10;&#10;    &lt;androidx.constraintlayout.widget.ConstraintLayout&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;match_parent&quot;&gt;&#10;&#10;        &lt;LinearLayout&#10;            android:id=&quot;@+id/mainContentContainer&quot;&#10;            android:layout_width=&quot;wrap_content&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:gravity=&quot;center&quot;&#10;            android:orientation=&quot;vertical&quot;&#10;            app:layout_constraintBottom_toTopOf=&quot;@+id/bottomAppBar&quot;&#10;            app:layout_constraintEnd_toEndOf=&quot;parent&quot;&#10;            app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;            app:layout_constraintTop_toTopOf=&quot;parent&quot;&#10;            app:layout_constraintVertical_bias=&quot;0.5&quot;&gt;&#10;&#10;            &lt;ImageView&#10;                android:id=&quot;@+id/appLogo&quot;&#10;                android:layout_width=&quot;64dp&quot;&#10;                android:layout_height=&quot;64dp&quot;&#10;                android:src=&quot;@drawable/ic_app_logo&quot;&#10;                app:tint=&quot;@color/colorPrimary&quot; /&gt;&#10;&#10;            &lt;TextView&#10;                android:id=&quot;@+id/appName&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_marginTop=&quot;8dp&quot;&#10;                android:text=&quot;Know My Spot&quot;&#10;                android:textAllCaps=&quot;true&quot;&#10;                android:textColor=&quot;@color/text_primary&quot;&#10;                android:textSize=&quot;28sp&quot;&#10;                android:textStyle=&quot;bold&quot; /&gt;&#10;&#10;&#10;            &lt;LinearLayout&#10;                android:id=&quot;@+id/locationContainer&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_marginTop=&quot;80dp&quot;&#10;                android:gravity=&quot;center&quot;&#10;                android:orientation=&quot;vertical&quot;&gt;&#10;&#10;                &lt;TextView&#10;                    android:id=&quot;@+id/tvLocation&quot;&#10;                    android:layout_width=&quot;wrap_content&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:gravity=&quot;center&quot;&#10;                    android:paddingHorizontal=&quot;32dp&quot;&#10;                    android:text=&quot;Načítání adresy...&quot;&#10;                    android:textColor=&quot;@color/text_primary&quot;&#10;                    android:textSize=&quot;24sp&quot;&#10;                    android:textStyle=&quot;bold&quot; /&gt;&#10;&#10;                &lt;LinearLayout&#10;                    android:layout_width=&quot;wrap_content&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:layout_marginTop=&quot;16dp&quot;&#10;                    android:gravity=&quot;center_vertical&quot;&#10;                    android:orientation=&quot;horizontal&quot;&gt;&#10;&#10;                    &lt;ImageView&#10;                        android:layout_width=&quot;16dp&quot;&#10;                        android:layout_height=&quot;16dp&quot;&#10;                        android:src=&quot;@drawable/ic_location_pin_24&quot;&#10;                        app:tint=&quot;@color/text_secondary&quot; /&gt;&#10;&#10;                    &lt;TextView&#10;                        android:id=&quot;@+id/tvCoordinates&quot;&#10;                        android:layout_width=&quot;wrap_content&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:layout_marginStart=&quot;8dp&quot;&#10;                        android:text=&quot;Lat: --, Lon: --&quot;&#10;                        android:textColor=&quot;@color/text_secondary&quot;&#10;                        android:textSize=&quot;14sp&quot; /&gt;&#10;                &lt;/LinearLayout&gt;&#10;&#10;                &lt;LinearLayout&#10;                    android:layout_width=&quot;wrap_content&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:layout_marginTop=&quot;8dp&quot;&#10;                    android:gravity=&quot;center_vertical&quot;&#10;                    android:orientation=&quot;horizontal&quot;&gt;&#10;&#10;                    &lt;ImageView&#10;                        android:layout_width=&quot;16dp&quot;&#10;                        android:layout_height=&quot;16dp&quot;&#10;                        android:src=&quot;@drawable/ic_weather_24&quot;&#10;                        app:tint=&quot;@color/text_secondary&quot; /&gt;&#10;&#10;                    &lt;TextView&#10;                        android:id=&quot;@+id/tvWeather&quot;&#10;                        android:layout_width=&quot;wrap_content&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:layout_marginStart=&quot;8dp&quot;&#10;                        android:text=&quot;Počasí: --&quot;&#10;                        android:textColor=&quot;@color/text_secondary&quot;&#10;                        android:textSize=&quot;14sp&quot; /&gt;&#10;                &lt;/LinearLayout&gt;&#10;&#10;            &lt;/LinearLayout&gt;&#10;&#10;        &lt;/LinearLayout&gt;&#10;&#10;        &lt;ImageButton&#10;            android:id=&quot;@+id/btnRefresh&quot;&#10;            android:layout_width=&quot;wrap_content&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:layout_marginTop=&quot;16dp&quot;&#10;            android:background=&quot;?attr/selectableItemBackgroundBorderless&quot;&#10;            android:contentDescription=&quot;Obnovit&quot;&#10;            android:padding=&quot;12dp&quot;&#10;            android:src=&quot;@drawable/ic_refresh_24&quot;&#10;            app:layout_constraintEnd_toEndOf=&quot;parent&quot;&#10;            app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;            app:layout_constraintTop_toBottomOf=&quot;@+id/mainContentContainer&quot;&#10;            app:tint=&quot;@color/colorPrimary&quot; /&gt;&#10;&#10;        &lt;ProgressBar&#10;            android:id=&quot;@+id/progressBar&quot;&#10;            android:layout_width=&quot;wrap_content&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:visibility=&quot;gone&quot;&#10;            app:layout_constraintBottom_toBottomOf=&quot;@+id/btnRefresh&quot;&#10;            app:layout_constraintEnd_toEndOf=&quot;@+id/btnRefresh&quot;&#10;            app:layout_constraintStart_toStartOf=&quot;@+id/btnRefresh&quot;&#10;            app:layout_constraintTop_toTopOf=&quot;@+id/btnRefresh&quot; /&gt;&#10;&#10;&#10;    &lt;/androidx.constraintlayout.widget.ConstraintLayout&gt;&#10;&#10;    &lt;com.google.android.material.bottomappbar.BottomAppBar&#10;        android:id=&quot;@+id/bottomAppBar&quot;&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:layout_gravity=&quot;bottom&quot;&#10;        app:fabCradleMargin=&quot;10dp&quot;&#10;        app:fabCradleRoundedCornerRadius=&quot;10dp&quot;&#10;        app:fabCradleVerticalOffset=&quot;10dp&quot;&gt;&#10;&#10;        &lt;LinearLayout&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:orientation=&quot;horizontal&quot;&gt;&#10;&#10;            &lt;com.google.android.material.button.MaterialButton&#10;                android:id=&quot;@+id/btnHistory&quot;&#10;                style=&quot;?attr/borderlessButtonStyle&quot;&#10;                android:layout_width=&quot;0dp&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_marginEnd=&quot;8dp&quot;&#10;                android:layout_weight=&quot;1&quot;&#10;                android:text=&quot;Historie&quot;&#10;                app:icon=&quot;@drawable/ic_history_24&quot;&#10;                app:iconPadding=&quot;4dp&quot;/&gt;&#10;&#10;            &lt;com.google.android.material.button.MaterialButton&#10;                android:id=&quot;@+id/btnSettings&quot;&#10;                style=&quot;?attr/borderlessButtonStyle&quot;&#10;                android:layout_width=&quot;0dp&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_marginStart=&quot;8dp&quot;&#10;                android:layout_weight=&quot;1&quot;&#10;                android:text=&quot;Nastavení&quot;&#10;                app:icon=&quot;@drawable/ic_settings_24&quot;&#10;                app:iconPadding=&quot;4dp&quot;/&gt;&#10;        &lt;/LinearLayout&gt;&#10;&#10;    &lt;/com.google.android.material.bottomappbar.BottomAppBar&gt;&#10;&#10;&lt;/androidx.coordinatorlayout.widget.CoordinatorLayout&gt;&#10;" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;androidx.coordinatorlayout.widget.CoordinatorLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;&#10;    xmlns:tools=&quot;http://schemas.android.com/tools&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;match_parent&quot;&#10;    android:background=&quot;@color/background_color&quot;&#10;    tools:context=&quot;.MainActivity&quot;&gt;&#10;&#10;    &lt;androidx.constraintlayout.widget.ConstraintLayout&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;match_parent&quot;&gt;&#10;&#10;        &lt;LinearLayout&#10;            android:id=&quot;@+id/mainContentContainer&quot;&#10;            android:layout_width=&quot;wrap_content&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:gravity=&quot;center&quot;&#10;            android:orientation=&quot;vertical&quot;&#10;            app:layout_constraintBottom_toTopOf=&quot;@+id/bottomAppBar&quot;&#10;            app:layout_constraintEnd_toEndOf=&quot;parent&quot;&#10;            app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;            app:layout_constraintTop_toTopOf=&quot;parent&quot;&#10;            app:layout_constraintVertical_bias=&quot;0.5&quot;&gt;&#10;&#10;            &lt;ImageView&#10;                android:id=&quot;@+id/appLogo&quot;&#10;                android:layout_width=&quot;64dp&quot;&#10;                android:layout_height=&quot;64dp&quot;&#10;                android:src=&quot;@drawable/ic_app_logo&quot;&#10;                app:tint=&quot;@color/colorPrimary&quot; /&gt;&#10;&#10;            &lt;TextView&#10;                android:id=&quot;@+id/appName&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_marginTop=&quot;8dp&quot;&#10;                android:text=&quot;Know My Spot&quot;&#10;                android:textAllCaps=&quot;true&quot;&#10;                android:textColor=&quot;@color/text_primary&quot;&#10;                android:textSize=&quot;28sp&quot;&#10;                android:textStyle=&quot;bold&quot; /&gt;&#10;&#10;&#10;            &lt;LinearLayout&#10;                android:id=&quot;@+id/locationContainer&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_marginTop=&quot;80dp&quot;&#10;                android:gravity=&quot;center&quot;&#10;                android:orientation=&quot;vertical&quot;&gt;&#10;&#10;                &lt;TextView&#10;                    android:id=&quot;@+id/tvLocation&quot;&#10;                    android:layout_width=&quot;wrap_content&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:gravity=&quot;center&quot;&#10;                    android:paddingHorizontal=&quot;32dp&quot;&#10;                    android:text=&quot;Načítání adresy...&quot;&#10;                    android:textColor=&quot;@color/text_primary&quot;&#10;                    android:textSize=&quot;24sp&quot;&#10;                    android:textStyle=&quot;bold&quot; /&gt;&#10;&#10;                &lt;LinearLayout&#10;                    android:layout_width=&quot;wrap_content&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:layout_marginTop=&quot;16dp&quot;&#10;                    android:gravity=&quot;center_vertical&quot;&#10;                    android:orientation=&quot;horizontal&quot;&gt;&#10;&#10;                    &lt;ImageView&#10;                        android:layout_width=&quot;16dp&quot;&#10;                        android:layout_height=&quot;16dp&quot;&#10;                        android:src=&quot;@drawable/ic_location_pin_24&quot;&#10;                        app:tint=&quot;@color/text_secondary&quot; /&gt;&#10;&#10;                    &lt;TextView&#10;                        android:id=&quot;@+id/tvCoordinates&quot;&#10;                        android:layout_width=&quot;wrap_content&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:layout_marginStart=&quot;8dp&quot;&#10;                        android:text=&quot;Lat: --, Lon: --&quot;&#10;                        android:textColor=&quot;@color/text_secondary&quot;&#10;                        android:textSize=&quot;14sp&quot; /&gt;&#10;                &lt;/LinearLayout&gt;&#10;&#10;                &lt;LinearLayout&#10;                    android:layout_width=&quot;wrap_content&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:layout_marginTop=&quot;8dp&quot;&#10;                    android:gravity=&quot;center_vertical&quot;&#10;                    android:orientation=&quot;horizontal&quot;&gt;&#10;&#10;                    &lt;ImageView&#10;                        android:layout_width=&quot;16dp&quot;&#10;                        android:layout_height=&quot;16dp&quot;&#10;                        android:src=&quot;@drawable/ic_weather_24&quot;&#10;                        app:tint=&quot;@color/text_secondary&quot; /&gt;&#10;&#10;                    &lt;TextView&#10;                        android:id=&quot;@+id/tvWeather&quot;&#10;                        android:layout_width=&quot;wrap_content&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:layout_marginStart=&quot;8dp&quot;&#10;                        android:text=&quot;Počasí: --&quot;&#10;                        android:textColor=&quot;@color/text_secondary&quot;&#10;                        android:textSize=&quot;14sp&quot; /&gt;&#10;                &lt;/LinearLayout&gt;&#10;&#10;            &lt;/LinearLayout&gt;&#10;&#10;        &lt;/LinearLayout&gt;&#10;&#10;        &lt;ImageButton&#10;            android:id=&quot;@+id/btnRefresh&quot;&#10;            android:layout_width=&quot;wrap_content&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:layout_marginTop=&quot;16dp&quot;&#10;            android:background=&quot;?attr/selectableItemBackgroundBorderless&quot;&#10;            android:contentDescription=&quot;Obnovit&quot;&#10;            android:padding=&quot;12dp&quot;&#10;            android:src=&quot;@drawable/ic_refresh_24&quot;&#10;            app:layout_constraintEnd_toEndOf=&quot;parent&quot;&#10;            app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;            app:layout_constraintTop_toBottomOf=&quot;@+id/mainContentContainer&quot;&#10;            app:tint=&quot;@color/colorPrimary&quot; /&gt;&#10;&#10;        &lt;ProgressBar&#10;            android:id=&quot;@+id/progressBar&quot;&#10;            android:layout_width=&quot;wrap_content&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:visibility=&quot;gone&quot;&#10;            app:layout_constraintBottom_toBottomOf=&quot;@+id/btnRefresh&quot;&#10;            app:layout_constraintEnd_toEndOf=&quot;@+id/btnRefresh&quot;&#10;            app:layout_constraintStart_toStartOf=&quot;@+id/btnRefresh&quot;&#10;            app:layout_constraintTop_toTopOf=&quot;@+id/btnRefresh&quot; /&gt;&#10;&#10;&#10;    &lt;/androidx.constraintlayout.widget.ConstraintLayout&gt;&#10;&#10;    &lt;com.google.android.material.bottomappbar.BottomAppBar&#10;        android:id=&quot;@+id/bottomAppBar&quot;&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:layout_gravity=&quot;bottom&quot;&#10;        app:fabCradleMargin=&quot;10dp&quot;&#10;        app:fabCradleRoundedCornerRadius=&quot;10dp&quot;&#10;        app:fabCradleVerticalOffset=&quot;10dp&quot;&gt;&#10;&#10;        &lt;LinearLayout&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:orientation=&quot;horizontal&quot;&gt;&#10;&#10;            &lt;com.google.android.material.button.MaterialButton&#10;                android:id=&quot;@+id/btnHistory&quot;&#10;                style=&quot;?attr/borderlessButtonStyle&quot;&#10;                android:layout_width=&quot;0dp&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_marginEnd=&quot;8dp&quot;&#10;                android:layout_weight=&quot;1&quot;&#10;                android:text=&quot;Historie&quot;&#10;                app:icon=&quot;@drawable/ic_history_24&quot;&#10;                app:iconPadding=&quot;0dp&quot;/&gt;&#10;&#10;            &lt;com.google.android.material.button.MaterialButton&#10;                android:id=&quot;@+id/btnSettings&quot;&#10;                style=&quot;?attr/borderlessButtonStyle&quot;&#10;                android:layout_width=&quot;0dp&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_marginStart=&quot;8dp&quot;&#10;                android:layout_weight=&quot;1&quot;&#10;                android:text=&quot;Nastavení&quot;&#10;                app:icon=&quot;@drawable/ic_settings_24&quot;&#10;                app:iconPadding=&quot;0dp&quot;/&gt;&#10;        &lt;/LinearLayout&gt;&#10;&#10;    &lt;/com.google.android.material.bottomappbar.BottomAppBar&gt;&#10;&#10;&lt;/androidx.coordinatorlayout.widget.CoordinatorLayout&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/layout/activity_settings.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/layout/activity_settings.xml" />
              <option name="originalContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;RelativeLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;&#10;    xmlns:tools=&quot;http://schemas.android.com/tools&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;match_parent&quot;&#10;    android:background=&quot;@color/background_color&quot;&#10;    tools:context=&quot;.SettingsActivity&quot;&gt;&#10;&#10;    &lt;com.google.android.material.appbar.AppBarLayout&#10;        android:id=&quot;@+id/appBarLayout&quot;&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&gt;&#10;&#10;        &lt;androidx.appcompat.widget.Toolbar&#10;            android:id=&quot;@+id/toolbar&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;?attr/actionBarSize&quot;&#10;            android:background=&quot;?attr/colorPrimary&quot;&#10;            app:title=&quot;Nastavení&quot;&#10;            app:titleTextColor=&quot;@color/white&quot; /&gt;&#10;&#10;    &lt;/com.google.android.material.appbar.AppBarLayout&gt;&#10;&#10;    &lt;ScrollView&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;match_parent&quot;&#10;        android:layout_below=&quot;@id/appBarLayout&quot;&gt;&#10;&#10;        &lt;LinearLayout&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:orientation=&quot;vertical&quot;&#10;            android:padding=&quot;16dp&quot;&gt;&#10;&#10;            &lt;androidx.cardview.widget.CardView&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                app:cardCornerRadius=&quot;8dp&quot;&#10;                app:cardElevation=&quot;2dp&quot;&gt;&#10;&#10;                &lt;LinearLayout&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:orientation=&quot;vertical&quot;&#10;                    android:padding=&quot;16dp&quot;&gt;&#10;&#10;                    &lt;TextView&#10;                        android:layout_width=&quot;wrap_content&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:text=&quot;Jednotky&quot;&#10;                        android:textColor=&quot;@color/text_primary&quot;&#10;                        android:textSize=&quot;18sp&quot;&#10;                        android:textStyle=&quot;bold&quot; /&gt;&#10;&#10;                    &lt;com.google.android.material.switchmaterial.SwitchMaterial&#10;                        android:id=&quot;@+id/switchUnits&quot;&#10;                        android:layout_width=&quot;match_parent&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:layout_marginTop=&quot;8dp&quot;&#10;                        android:text=&quot;Metrické / Imperiální&quot;&#10;                        android:textSize=&quot;16sp&quot; /&gt;&#10;&#10;                &lt;/LinearLayout&gt;&#10;            &lt;/androidx.cardview.widget.CardView&gt;&#10;&#10;            &lt;androidx.cardview.widget.CardView&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_marginTop=&quot;16dp&quot;&#10;                app:cardCornerRadius=&quot;8dp&quot;&#10;                app:cardElevation=&quot;2dp&quot;&gt;&#10;&#10;                &lt;LinearLayout&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:orientation=&quot;vertical&quot;&#10;                    android:padding=&quot;16dp&quot;&gt;&#10;&#10;                    &lt;TextView&#10;                        android:layout_width=&quot;wrap_content&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:text=&quot;O aplikaci&quot;&#10;                        android:textColor=&quot;@color/text_primary&quot;&#10;                        android:textSize=&quot;18sp&quot;&#10;                        android:textStyle=&quot;bold&quot; /&gt;&#10;&#10;                    &lt;TextView&#10;                        android:layout_width=&quot;wrap_content&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:layout_marginTop=&quot;8dp&quot;&#10;                        android:text=&quot;Verze aplikace: 1.0.0&quot;&#10;                        android:textSize=&quot;16sp&quot; /&gt;&#10;&#10;                &lt;/LinearLayout&gt;&#10;            &lt;/androidx.cardview.widget.CardView&gt;&#10;&#10;        &lt;/LinearLayout&gt;&#10;    &lt;/ScrollView&gt;&#10;&#10;&lt;/RelativeLayout&gt;&#10;" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;RelativeLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;&#10;    xmlns:tools=&quot;http://schemas.android.com/tools&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;match_parent&quot;&#10;    android:background=&quot;@color/background_color&quot;&#10;    tools:context=&quot;.SettingsActivity&quot;&gt;&#10;&#10;    &lt;com.google.android.material.appbar.AppBarLayout&#10;        android:id=&quot;@+id/appBarLayout&quot;&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&gt;&#10;&#10;        &lt;androidx.appcompat.widget.Toolbar&#10;            android:id=&quot;@+id/toolbar&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;?attr/actionBarSize&quot;&#10;            android:background=&quot;@color/colorPrimaryDark&quot;&#10;            app:title=&quot;Nastavení&quot;&#10;            app:titleTextColor=&quot;@color/white&quot; /&gt;&#10;&#10;    &lt;/com.google.android.material.appbar.AppBarLayout&gt;&#10;&#10;    &lt;ScrollView&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;match_parent&quot;&#10;        android:layout_below=&quot;@id/appBarLayout&quot;&gt;&#10;&#10;        &lt;LinearLayout&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:orientation=&quot;vertical&quot;&#10;            android:padding=&quot;16dp&quot;&gt;&#10;&#10;            &lt;androidx.cardview.widget.CardView&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                app:cardCornerRadius=&quot;8dp&quot;&#10;                app:cardElevation=&quot;2dp&quot;&gt;&#10;&#10;                &lt;LinearLayout&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:orientation=&quot;vertical&quot;&#10;                    android:padding=&quot;16dp&quot;&gt;&#10;&#10;                    &lt;TextView&#10;                        android:layout_width=&quot;wrap_content&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:text=&quot;Jednotky&quot;&#10;                        android:textColor=&quot;@color/text_primary&quot;&#10;                        android:textSize=&quot;18sp&quot;&#10;                        android:textStyle=&quot;bold&quot; /&gt;&#10;&#10;                    &lt;com.google.android.material.switchmaterial.SwitchMaterial&#10;                        android:id=&quot;@+id/switchUnits&quot;&#10;                        android:layout_width=&quot;match_parent&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:layout_marginTop=&quot;8dp&quot;&#10;                        android:text=&quot;Metrické / Imperiální&quot;&#10;                        android:textSize=&quot;16sp&quot; /&gt;&#10;&#10;                &lt;/LinearLayout&gt;&#10;            &lt;/androidx.cardview.widget.CardView&gt;&#10;&#10;            &lt;androidx.cardview.widget.CardView&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_marginTop=&quot;16dp&quot;&#10;                app:cardCornerRadius=&quot;8dp&quot;&#10;                app:cardElevation=&quot;2dp&quot;&gt;&#10;&#10;                &lt;LinearLayout&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:orientation=&quot;vertical&quot;&#10;                    android:padding=&quot;16dp&quot;&gt;&#10;&#10;                    &lt;TextView&#10;                        android:layout_width=&quot;wrap_content&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:text=&quot;O aplikaci&quot;&#10;                        android:textColor=&quot;@color/text_primary&quot;&#10;                        android:textSize=&quot;18sp&quot;&#10;                        android:textStyle=&quot;bold&quot; /&gt;&#10;&#10;                    &lt;TextView&#10;                        android:layout_width=&quot;wrap_content&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:layout_marginTop=&quot;8dp&quot;&#10;                        android:text=&quot;Verze aplikace: 1.0.0&quot;&#10;                        android:textSize=&quot;16sp&quot; /&gt;&#10;&#10;                &lt;/LinearLayout&gt;&#10;            &lt;/androidx.cardview.widget.CardView&gt;&#10;&#10;        &lt;/LinearLayout&gt;&#10;    &lt;/ScrollView&gt;&#10;&#10;&lt;/RelativeLayout&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/layout/item_history.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/layout/item_history.xml" />
              <option name="originalContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;wrap_content&quot;&#10;    android:orientation=&quot;vertical&quot;&#10;    android:padding=&quot;8dp&quot;&gt;&#10;&#10;    &lt;LinearLayout&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:orientation=&quot;horizontal&quot;&#10;        android:gravity=&quot;center_vertical&quot;&gt;&#10;&#10;        &lt;TextView&#10;            android:id=&quot;@+id/tvHistoryItemInfo&quot;&#10;            android:layout_width=&quot;0dp&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:layout_weight=&quot;1&quot;&#10;            android:text=&quot;Info&quot;&#10;            android:textSize=&quot;16sp&quot;/&gt;&#10;&#10;        &lt;ImageButton&#10;            android:id=&quot;@+id/btnEditNote&quot;&#10;            android:layout_width=&quot;wrap_content&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:src=&quot;@drawable/ic_edit_24&quot;&#10;            android:background=&quot;@android:color/transparent&quot;&#10;            android:contentDescription=&quot;Editovat poznámku&quot;&#10;            android:padding=&quot;4dp&quot;/&gt;&#10;&#10;        &lt;ImageButton&#10;            android:id=&quot;@+id/btnDeleteRecord&quot;&#10;            android:layout_width=&quot;wrap_content&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:src=&quot;@drawable/ic_delete_24&quot;&#10;            android:background=&quot;@android:color/transparent&quot;&#10;            android:contentDescription=&quot;Smazat záznam&quot;&#10;            android:padding=&quot;4dp&quot;/&gt;&#10;    &lt;/LinearLayout&gt;&#10;&#10;    &lt;EditText&#10;        android:id=&quot;@+id/etNote&quot;&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:hint=&quot;Poznámka...&quot;&#10;        android:visibility=&quot;gone&quot;/&gt;&#10;&#10;    &lt;Button&#10;        android:id=&quot;@+id/btnSaveNote&quot;&#10;        android:layout_width=&quot;wrap_content&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:text=&quot;Uložit poznámku&quot;&#10;        android:layout_gravity=&quot;end&quot;&#10;        android:layout_marginTop=&quot;4dp&quot;&#10;        android:visibility=&quot;gone&quot;/&gt;&#10;&lt;/LinearLayout&gt;&#10;" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;androidx.cardview.widget.CardView xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;wrap_content&quot;&#10;    android:layout_marginHorizontal=&quot;8dp&quot;&#10;    android:layout_marginVertical=&quot;4dp&quot;&#10;    app:cardCornerRadius=&quot;8dp&quot;&#10;    app:cardElevation=&quot;2dp&quot;&gt;&#10;&#10;    &lt;LinearLayout&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:orientation=&quot;vertical&quot;&#10;        android:padding=&quot;16dp&quot;&gt;&#10;&#10;        &lt;TextView&#10;            android:id=&quot;@+id/tvHistoryItemAddress&quot;&#10;            android:layout_width=&quot;wrap_content&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:text=&quot;Adresa: &quot;&#10;            android:textColor=&quot;@color/text_primary&quot;&#10;            android:textSize=&quot;16sp&quot;&#10;            android:textStyle=&quot;bold&quot; /&gt;&#10;&#10;        &lt;TextView&#10;            android:id=&quot;@+id/tvHistoryItemWeather&quot;&#10;            android:layout_width=&quot;wrap_content&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:layout_marginTop=&quot;4dp&quot;&#10;            android:text=&quot;Počasí: &quot;&#10;            android:textColor=&quot;@color/text_secondary&quot;&#10;            android:textSize=&quot;14sp&quot; /&gt;&#10;&#10;        &lt;TextView&#10;            android:id=&quot;@+id/tvHistoryItemCoordinates&quot;&#10;            android:layout_width=&quot;wrap_content&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:layout_marginTop=&quot;4dp&quot;&#10;            android:text=&quot;Lat: Lon:&quot;&#10;            android:textColor=&quot;@color/text_secondary&quot;&#10;            android:textSize=&quot;12sp&quot; /&gt;&#10;&#10;        &lt;LinearLayout&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:layout_marginTop=&quot;8dp&quot;&#10;            android:gravity=&quot;center_vertical&quot;&#10;            android:orientation=&quot;horizontal&quot;&gt;&#10;&#10;            &lt;TextView&#10;                android:id=&quot;@+id/tvHistoryItemNote&quot;&#10;                android:layout_width=&quot;0dp&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_weight=&quot;1&quot;&#10;                android:text=&quot;Poznámka: --&quot;&#10;                android:textColor=&quot;@color/text_primary&quot;&#10;                android:textSize=&quot;14sp&quot; /&gt;&#10;&#10;            &lt;ImageButton&#10;                android:id=&quot;@+id/btnEditNote&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:background=&quot;?attr/selectableItemBackgroundBorderless&quot;&#10;                android:contentDescription=&quot;Editovat poznámku&quot;&#10;                android:padding=&quot;4dp&quot;&#10;                android:src=&quot;@drawable/ic_edit_24&quot;&#10;                app:tint=&quot;@color/colorPrimary&quot; /&gt;&#10;&#10;            &lt;ImageButton&#10;                android:id=&quot;@+id/btnDeleteRecord&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:background=&quot;?attr/selectableItemBackgroundBorderless&quot;&#10;                android:contentDescription=&quot;Smazat záznam&quot;&#10;                android:padding=&quot;4dp&quot;&#10;                android:src=&quot;@drawable/ic_delete_24&quot;&#10;                app:tint=&quot;@color/colorAccent&quot; /&gt;&#10;        &lt;/LinearLayout&gt;&#10;&#10;        &lt;EditText&#10;            android:id=&quot;@+id/etNote&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:layout_marginTop=&quot;8dp&quot;&#10;            android:hint=&quot;Nová poznámka...&quot;&#10;            android:visibility=&quot;gone&quot; /&gt;&#10;&#10;        &lt;Button&#10;            android:id=&quot;@+id/btnSaveNote&quot;&#10;            android:layout_width=&quot;wrap_content&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:layout_gravity=&quot;end&quot;&#10;            android:layout_marginTop=&quot;8dp&quot;&#10;            android:text=&quot;Uložit&quot;&#10;            android:visibility=&quot;gone&quot; /&gt;&#10;    &lt;/LinearLayout&gt;&#10;&lt;/androidx.cardview.widget.CardView&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/values/colors.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/values/colors.xml" />
              <option name="originalContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;resources&gt;&#10;    &lt;color name=&quot;colorPrimary&quot;&gt;#6200EE&lt;/color&gt;&#10;    &lt;color name=&quot;colorPrimaryDark&quot;&gt;#3700B3&lt;/color&gt;&#10;    &lt;color name=&quot;colorAccent&quot;&gt;#03DAC5&lt;/color&gt;&#10;    &lt;color name=&quot;white&quot;&gt;#FFFFFF&lt;/color&gt;&#10;    &lt;color name=&quot;light_gray&quot;&gt;#888888&lt;/color&gt;&#10;    &lt;color name=&quot;background_color&quot;&gt;#F5F5F5&lt;/color&gt;&#10;    &lt;color name=&quot;card_background&quot;&gt;#FFFFFF&lt;/color&gt;&#10;    &lt;color name=&quot;text_primary&quot;&gt;#212121&lt;/color&gt;&#10;    &lt;color name=&quot;text_secondary&quot;&gt;#757575&lt;/color&gt;&#10;&lt;/resources&gt;&#10;&#10;" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;resources&gt;&#10;    &lt;color name=&quot;colorPrimary&quot;&gt;#6200EE&lt;/color&gt;&#10;    &lt;color name=&quot;colorPrimaryDark&quot;&gt;#3700B3&lt;/color&gt;&#10;    &lt;color name=&quot;colorAccent&quot;&gt;#03DAC5&lt;/color&gt;&#10;    &lt;color name=&quot;white&quot;&gt;#FFFFFF&lt;/color&gt;&#10;    &lt;color name=&quot;light_gray&quot;&gt;#888888&lt;/color&gt;&#10;    &lt;color name=&quot;background_color&quot;&gt;#F5F5F5&lt;/color&gt;&#10;    &lt;color name=&quot;card_background&quot;&gt;#FFFFFF&lt;/color&gt;&#10;    &lt;color name=&quot;text_primary&quot;&gt;#212121&lt;/color&gt;&#10;    &lt;color name=&quot;text_secondary&quot;&gt;#757575&lt;/color&gt;&#10;    &lt;color name=&quot;black&quot;&gt;#000000&lt;/color&gt;&#10;&lt;/resources&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/values/themes.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/values/themes.xml" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;resources&gt;&#10;    &lt;!-- Base application theme. --&gt;&#10;    &lt;style name=&quot;Theme.KnowMySpot&quot; parent=&quot;Theme.MaterialComponents.DayNight.NoActionBar&quot;&gt;&#10;        &lt;!-- Primary brand color. --&gt;&#10;        &lt;item name=&quot;colorPrimary&quot;&gt;@color/colorPrimary&lt;/item&gt;&#10;        &lt;item name=&quot;colorPrimaryVariant&quot;&gt;@color/colorPrimaryDark&lt;/item&gt;&#10;        &lt;item name=&quot;colorOnPrimary&quot;&gt;@color/white&lt;/item&gt;&#10;        &lt;!-- Secondary brand color. --&gt;&#10;        &lt;item name=&quot;colorSecondary&quot;&gt;@color/colorAccent&lt;/item&gt;&#10;        &lt;item name=&quot;colorSecondaryVariant&quot;&gt;@color/colorAccent&lt;/item&gt;&#10;        &lt;item name=&quot;colorOnSecondary&quot;&gt;@color/black&lt;/item&gt;&#10;        &lt;!-- Status bar color. --&gt;&#10;        &lt;item name=&quot;android:statusBarColor&quot;&gt;?attr/colorPrimaryVariant&lt;/item&gt;&#10;        &lt;!-- Customize your theme here. --&gt;&#10;    &lt;/style&gt;&#10;&lt;/resources&gt;&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/build.gradle.kts">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/build.gradle.kts" />
              <option name="originalContent" value="// Top-level build file where you can add configuration options common to all sub-projects/modules.&#10;plugins {&#10;    alias(libs.plugins.android.application) apply false&#10;    alias(libs.plugins.kotlin.android) apply false&#10;}" />
              <option name="updatedContent" value="// Top-level build file where you can add configuration options common to all sub-projects/modules.&#10;plugins {&#10;    alias(libs.plugins.android.application) apply false&#10;    alias(libs.plugins.kotlin.android) apply false&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/gradle.properties">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/gradle.properties" />
              <option name="originalContent" value="# Project-wide Gradle settings.&#10;# IDE (e.g. Android Studio) users:&#10;# Gradle settings configured through the IDE *will override*&#10;# any settings specified in this file.&#10;# For more details on how to configure your build environment visit&#10;# http://www.gradle.org/docs/current/userguide/build_environment.html&#10;# Specifies the JVM arguments used for the daemon process.&#10;# The setting is particularly useful for tweaking memory settings.&#10;org.gradle.jvmargs=-Xmx2048m -Dfile.encoding=UTF-8&#10;# When configured, Gradle will run in incubating parallel mode.&#10;# This option should only be used with decoupled projects. For more details, visit&#10;# https://developer.android.com/r/tools/gradle-multi-project-decoupled-projects&#10;# org.gradle.parallel=true&#10;# AndroidX package structure to make it clearer which packages are bundled with the&#10;# Android operating system, and which are packaged with your app's APK&#10;# https://developer.android.com/topic/libraries/support-library/androidx-rn&#10;android.useAndroidX=true&#10;# Kotlin code style for this project: &quot;official&quot; or &quot;obsolete&quot;:&#10;kotlin.code.style=official&#10;# Enables namespacing of each library's R class so that its R class includes only the&#10;# resources declared in the library itself and none from the library's dependencies,&#10;# thereby reducing the size of the R class for that library&#10;android.nonTransitiveRClass=true&#10;org.gradle.java.home=/opt/homebrew/opt/openjdk@11&#10;" />
              <option name="updatedContent" value="# Project-wide Gradle settings.&#10;# IDE (e.g. Android Studio) users:&#10;# Gradle settings configured through the IDE *will override*&#10;# any settings specified in this file.&#10;# For more details on how to configure your build environment visit&#10;# http://www.gradle.org/docs/current/userguide/build_environment.html&#10;# Specifies the JVM arguments used for the daemon process.&#10;# The setting is particularly useful for tweaking memory settings.&#10;org.gradle.jvmargs=-Xmx2048m -Dfile.encoding=UTF-8&#10;# When configured, Gradle will run in incubating parallel mode.&#10;# This option should only be used with decoupled projects. For more details, visit&#10;# https://developer.android.com/r/tools/gradle-multi-project-decoupled-projects&#10;# org.gradle.parallel=true&#10;# AndroidX package structure to make it clearer which packages are bundled with the&#10;# Android operating system, and which are packaged with your app's APK&#10;# https://developer.android.com/topic/libraries/support-library/androidx-rn&#10;android.useAndroidX=true&#10;# Kotlin code style for this project: &quot;official&quot; or &quot;obsolete&quot;:&#10;kotlin.code.style=official&#10;# Enables namespacing of each library's R class so that its R class includes only the&#10;# resources declared in the library itself and none from the library's dependencies,&#10;# thereby reducing the size of the R class for that library&#10;android.nonTransitiveRClass=true&#10;org.gradle.java.home=/opt/homebrew/opt/openjdk@17" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/gradle/libs.versions.toml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/gradle/libs.versions.toml" />
              <option name="originalContent" value="[versions]&#10;agp = &quot;7.4.2&quot;&#10;kotlin = &quot;1.9.0&quot;&#10;coreKtx = &quot;1.13.1&quot;&#10;junit = &quot;4.13.2&quot;&#10;junitVersion = &quot;1.2.1&quot;&#10;espressoCore = &quot;3.6.1&quot;&#10;lifecycleRuntimeKtx = &quot;2.8.2&quot;&#10;activityKtx = &quot;1.9.0&quot;&#10;viewModelKtx = &quot;2.8.2&quot;&#10;appcompat = &quot;1.7.0&quot;&#10;material = &quot;1.12.0&quot;&#10;constraintlayout = &quot;2.1.4&quot;&#10;cardview = &quot;1.0.0&quot;&#10;recyclerview = &quot;1.3.2&quot;&#10;playServicesLocation = &quot;21.3.0&quot;&#10;retrofit = &quot;2.9.0&quot;&#10;&#10;[libraries]&#10;androidx-core-ktx = { group = &quot;androidx.core&quot;, name = &quot;core-ktx&quot;, version.ref = &quot;coreKtx&quot; }&#10;androidx-appcompat = { group = &quot;androidx.appcompat&quot;, name = &quot;appcompat&quot;, version.ref = &quot;appcompat&quot; }&#10;androidx-constraintlayout = { group = &quot;androidx.constraintlayout&quot;, name = &quot;constraintlayout&quot;, version.ref = &quot;constraintlayout&quot; }&#10;androidx-lifecycle-runtime-ktx = { group = &quot;androidx.lifecycle&quot;, name = &quot;lifecycle-runtime-ktx&quot;, version.ref = &quot;lifecycleRuntimeKtx&quot; }&#10;androidx-activity-ktx = { group = &quot;androidx.activity&quot;, name = &quot;activity-ktx&quot;, version.ref = &quot;activityKtx&quot; }&#10;androidx-lifecycle-viewmodel-ktx = { group = &quot;androidx.lifecycle&quot;, name = &quot;lifecycle-viewmodel-ktx&quot;, version.ref = &quot;viewModelKtx&quot; }&#10;&#10;material = { group = &quot;com.google.android.material&quot;, name = &quot;material&quot;, version.ref = &quot;material&quot; }&#10;cardview = { group = &quot;androidx.cardview&quot;, name = &quot;cardview&quot;, version.ref = &quot;cardview&quot; }&#10;recyclerview = { group = &quot;androidx.recyclerview&quot;, name = &quot;recyclerview&quot;, version.ref = &quot;recyclerview&quot; }&#10;&#10;play-services-location = { group = &quot;com.google.android.gms&quot;, name = &quot;play-services-location&quot;, version.ref = &quot;playServicesLocation&quot; }&#10;&#10;retrofit = { group = &quot;com.squareup.retrofit2&quot;, name = &quot;retrofit&quot;, version.ref = &quot;retrofit&quot; }&#10;retrofit-converter-gson = { group = &quot;com.squareup.retrofit2&quot;, name = &quot;converter-gson&quot;, version.ref = &quot;retrofit&quot; }&#10;&#10;junit = { group = &quot;junit&quot;, name = &quot;junit&quot;, version.ref = &quot;junit&quot; }&#10;androidx-junit = { group = &quot;androidx.test.ext&quot;, name = &quot;junit&quot;, version.ref = &quot;junitVersion&quot; }&#10;androidx-espresso-core = { group = &quot;androidx.test.espresso&quot;, name = &quot;espresso-core&quot;, version.ref = &quot;espressoCore&quot; }&#10;&#10;[plugins]&#10;android-application = { id = &quot;com.android.application&quot;, version.ref = &quot;agp&quot; }&#10;kotlin-android = { id = &quot;org.jetbrains.kotlin.android&quot;, version.ref = &quot;kotlin&quot; }&#10;" />
              <option name="updatedContent" value="[versions]&#10;agp = &quot;8.2.0&quot;&#10;kotlin = &quot;1.9.22&quot;&#10;coreKtx = &quot;1.13.1&quot;&#10;junit = &quot;4.13.2&quot;&#10;junitVersion = &quot;1.2.1&quot;&#10;espressoCore = &quot;3.6.1&quot;&#10;lifecycleRuntimeKtx = &quot;2.8.2&quot;&#10;activityKtx = &quot;1.9.0&quot;&#10;viewModelKtx = &quot;2.8.2&quot;&#10;appcompat = &quot;1.7.0&quot;&#10;material = &quot;1.12.0&quot;&#10;constraintlayout = &quot;2.1.4&quot;&#10;cardview = &quot;1.0.0&quot;&#10;recyclerview = &quot;1.3.2&quot;&#10;playServicesLocation = &quot;21.3.0&quot;&#10;retrofit = &quot;2.9.0&quot;&#10;&#10;[libraries]&#10;androidx-core-ktx = { group = &quot;androidx.core&quot;, name = &quot;core-ktx&quot;, version.ref = &quot;coreKtx&quot; }&#10;androidx-appcompat = { group = &quot;androidx.appcompat&quot;, name = &quot;appcompat&quot;, version.ref = &quot;appcompat&quot; }&#10;androidx-constraintlayout = { group = &quot;androidx.constraintlayout&quot;, name = &quot;constraintlayout&quot;, version.ref = &quot;constraintlayout&quot; }&#10;androidx-lifecycle-runtime-ktx = { group = &quot;androidx.lifecycle&quot;, name = &quot;lifecycle-runtime-ktx&quot;, version.ref = &quot;lifecycleRuntimeKtx&quot; }&#10;androidx-activity-ktx = { group = &quot;androidx.activity&quot;, name = &quot;activity-ktx&quot;, version.ref = &quot;activityKtx&quot; }&#10;androidx-lifecycle-viewmodel-ktx = { group = &quot;androidx.lifecycle&quot;, name = &quot;lifecycle-viewmodel-ktx&quot;, version.ref = &quot;viewModelKtx&quot; }&#10;&#10;material = { group = &quot;com.google.android.material&quot;, name = &quot;material&quot;, version.ref = &quot;material&quot; }&#10;cardview = { group = &quot;androidx.cardview&quot;, name = &quot;cardview&quot;, version.ref = &quot;cardview&quot; }&#10;recyclerview = { group = &quot;androidx.recyclerview&quot;, name = &quot;recyclerview&quot;, version.ref = &quot;recyclerview&quot; }&#10;&#10;play-services-location = { group = &quot;com.google.android.gms&quot;, name = &quot;play-services-location&quot;, version.ref = &quot;playServicesLocation&quot; }&#10;&#10;retrofit = { group = &quot;com.squareup.retrofit2&quot;, name = &quot;retrofit&quot;, version.ref = &quot;retrofit&quot; }&#10;retrofit-converter-gson = { group = &quot;com.squareup.retrofit2&quot;, name = &quot;converter-gson&quot;, version.ref = &quot;retrofit&quot; }&#10;&#10;junit = { group = &quot;junit&quot;, name = &quot;junit&quot;, version.ref = &quot;junit&quot; }&#10;androidx-junit = { group = &quot;androidx.test.ext&quot;, name = &quot;junit&quot;, version.ref = &quot;junitVersion&quot; }&#10;androidx-espresso-core = { group = &quot;androidx.test.espresso&quot;, name = &quot;espresso-core&quot;, version.ref = &quot;espressoCore&quot; }&#10;&#10;[plugins]&#10;android-application = { id = &quot;com.android.application&quot;, version.ref = &quot;agp&quot; }&#10;kotlin-android = { id = &quot;org.jetbrains.kotlin.android&quot;, version.ref = &quot;kotlin&quot; }" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>